{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"eBGF Summary The eco Blockchain Governance Framework \u2013 eBGF The eco Blockchain Governance Framework (eBGF) is an initiative to create a framework that will support organisations that have the intention to set up such a dedicated public-permissioned, consortial blockchain network. The eBGF will offer general experience, considerations, thoughts, questions from experts in all topics. it will also provide specific links, recommendations and guidelines to examples, best practice implementations and standards for existing networks and their policies in order to operate a professional, production-grade, public-permissioned blockchain, enhance trust and transparence and improve the reliability and quality of the network, its services and the community. The framework suggests a structure for the creation of a specific network governance and possible pipelines for the actual writing process. However, the eBGF does not offer specific advise for an individual whitepaper. But providing an overview about the topics to address might be a first step towards a governance whitepaper. NOTE! These websites are work in progress. The content is not to be regarded as legal or business advice. Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-06","title":"eBGF Summary"},{"location":"#ebgf-summary","text":"","title":"eBGF Summary"},{"location":"#the-eco-blockchain-governance-framework-ebgf","text":"The eco Blockchain Governance Framework (eBGF) is an initiative to create a framework that will support organisations that have the intention to set up such a dedicated public-permissioned, consortial blockchain network. The eBGF will offer general experience, considerations, thoughts, questions from experts in all topics. it will also provide specific links, recommendations and guidelines to examples, best practice implementations and standards for existing networks and their policies in order to operate a professional, production-grade, public-permissioned blockchain, enhance trust and transparence and improve the reliability and quality of the network, its services and the community. The framework suggests a structure for the creation of a specific network governance and possible pipelines for the actual writing process. However, the eBGF does not offer specific advise for an individual whitepaper. But providing an overview about the topics to address might be a first step towards a governance whitepaper. NOTE! These websites are work in progress. The content is not to be regarded as legal or business advice. Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-06","title":"The eco Blockchain Governance Framework \u2013 eBGF"},{"location":"Introduction/","text":"Introduction to the scope of the eco Blockchain Governance Framework Governance for decentralised systems Governance models describe systems of control and regulation for political and social entities as well as organisations. Companies and corporations define a governance for their IT systems. This governance is used to manage risks, maintain security and quality of the systems, and improve the performance of the systems and organisations, alike. For corporate IT, governance models have been formalized and standardized in frameworks such as ISO/IEC 38500:2015, ISO/IEC 20000, ISO/IEC 27001, ISO/IEC 27017 or Trusted Cloud Data Protection Profile (TCDP), each capturing different aspects of IT governance. But while traditional IT systems can be controlled and governed by one or more individual organisations, decentralized systems, such as blockchain networks or other distributed ledger technologies (DLT), require a special kind of understanding, agreement or consensus among multiple participants to achieve coordination and collaboration for a specific purpose in order to achieve a common goal. A novel technology like blockchain or DLT creates new challenges to established governance frameworks, but it also allows to apply known solutions to new regulatory requirements. Overview of the eBGF Depending on the principle set-up of a blockchain network \u2013 whether we are speaking of public-permissionless, private-permissioned, or public-permissioned, consortial blockchain networks \u2013 different layers and components of governance may come into play and interact with each other quite distinctively. Matrix structure The eBGF will provide a description of a matrix structure . This means that each components (or sub-component) on different layers will influence other components (or sub-component) on other layers. The protocol governance will define the foundational technology and the consensus algorithm, which will have an effect on hardware requirements for validation nodes, maintenance or decisions-making for network updates. The governance for nodes and validators (or miners) may be defined by the institution that will run the consortium, the collaboration of its members as well as policies to participate in the network, eventually touching the question of sufficient decentralisation. In case that a blockchain network is dedicated to a specific purpose or serves a certain use case in a specific industry, the community might have very different requirements on a blockchain network and the way how users or customers can interact with applications that connect to the network. Also, some industries or sectors might be more experienced with digital innovation or more knowledgeable of technical standards, so that the provided ecosystem, the SDKs, the wikis and documentations need to feature a very different level of specification. The economic models of incentives and fees of a token economy is another central and highly sensitive component of any blockchain governance. The way how the consortium will issue and allocate tokens, define models for pre-mining or other benefits will provide the incentives for the members to join the consortium, but the implications of the economics have a significant impact on the perception of integrity and trust of the whole network. Token economics have to be done right! No other aspect of a blockchain network will face more severe consequences for members of a consortium if done wrong, and the regulation of crypto assets in an international settings is only one of the rabbit wholes consortia may be trapped in. Token economics require transparency as the principle guiding principle! Many other components of a blockchain governance refer to a very heterogeneous and rapidly evolving landscape of international regulation, laws, policies, and the liabilities that can be encountered in this landscape can be challenging for organisations to oversee. Strategies for publicly identifiable legal entities Existing public networks shifted some of the mentioned issues of governance towards the layer of the technical protocol and code-based rules. Other issues simply remained unaddressed and unresolved, thereby transitioning the projects into a legal grey area. Both strategies \u2013 trying to respond to regulatory issues concerning one specific component by putting the burden to solve this issue on another, or trying to simply ignore issues at stake, are not an option for public-permissioned blockchain networks, that are operated by a consortium of possibly known and established organizations. The fact that publicly identifiable legal entities collaborate to collectively operate a system makes the operators responsible for the system, as well as for activities that occur in this system. All too often the governance model of public-permissioned consortium-run blockchain networks lacks the quality which is required to serve the goals and use cases of that particular blockchain network. To improve on this situation we are proposing the eco Blockchain Governance Framework. The eBGF will support the conception and creation of a proper governance for specific individual blockchain consortia in order to operate a professional, production-grade, public-permissioned, consortial blockchain network. The eBGF The eBGF will serve as an abstract collection of topics that need to be addressed in order to operate a professional, production-grade, public-permissioned blockchain network. The eBGF will offer structure, questions, considerations, thoughts, guidelines, links and recommendations for standards and best practices of technical implementations. It will document experiences regarding technical monitoring, hardware and software requirements, policies updates, backup and disaster recovery. It will describe the processes for off- and on-boarding of members into the network as well as proposing and executing changes to the governance itself, and it will address many more aspects. However, it will not define a specific blockchain governance which defines answers to all issues of any blockchain governance. But addressing and locating issues of specific components on distinctive layers alone is a first step to finding solutions and improve the reliability and quality of the network and services. Addressing and locating issues of specific components on distinctive layers of a blockchain governance framework will also allow to evaluate and compare different networks protocols and governance models to each other and create greater transparency and trust in the blockchain networks of the future. Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"Introduction/#introduction-to-the-scope-of-the-eco-blockchain-governance-framework","text":"","title":"Introduction to the scope of the eco Blockchain Governance Framework"},{"location":"Introduction/#governance-for-decentralised-systems","text":"Governance models describe systems of control and regulation for political and social entities as well as organisations. Companies and corporations define a governance for their IT systems. This governance is used to manage risks, maintain security and quality of the systems, and improve the performance of the systems and organisations, alike. For corporate IT, governance models have been formalized and standardized in frameworks such as ISO/IEC 38500:2015, ISO/IEC 20000, ISO/IEC 27001, ISO/IEC 27017 or Trusted Cloud Data Protection Profile (TCDP), each capturing different aspects of IT governance. But while traditional IT systems can be controlled and governed by one or more individual organisations, decentralized systems, such as blockchain networks or other distributed ledger technologies (DLT), require a special kind of understanding, agreement or consensus among multiple participants to achieve coordination and collaboration for a specific purpose in order to achieve a common goal. A novel technology like blockchain or DLT creates new challenges to established governance frameworks, but it also allows to apply known solutions to new regulatory requirements.","title":"Governance for decentralised systems"},{"location":"Introduction/#overview-of-the-ebgf","text":"Depending on the principle set-up of a blockchain network \u2013 whether we are speaking of public-permissionless, private-permissioned, or public-permissioned, consortial blockchain networks \u2013 different layers and components of governance may come into play and interact with each other quite distinctively.","title":"Overview of the eBGF"},{"location":"Introduction/#matrix-structure","text":"The eBGF will provide a description of a matrix structure . This means that each components (or sub-component) on different layers will influence other components (or sub-component) on other layers. The protocol governance will define the foundational technology and the consensus algorithm, which will have an effect on hardware requirements for validation nodes, maintenance or decisions-making for network updates. The governance for nodes and validators (or miners) may be defined by the institution that will run the consortium, the collaboration of its members as well as policies to participate in the network, eventually touching the question of sufficient decentralisation. In case that a blockchain network is dedicated to a specific purpose or serves a certain use case in a specific industry, the community might have very different requirements on a blockchain network and the way how users or customers can interact with applications that connect to the network. Also, some industries or sectors might be more experienced with digital innovation or more knowledgeable of technical standards, so that the provided ecosystem, the SDKs, the wikis and documentations need to feature a very different level of specification. The economic models of incentives and fees of a token economy is another central and highly sensitive component of any blockchain governance. The way how the consortium will issue and allocate tokens, define models for pre-mining or other benefits will provide the incentives for the members to join the consortium, but the implications of the economics have a significant impact on the perception of integrity and trust of the whole network. Token economics have to be done right! No other aspect of a blockchain network will face more severe consequences for members of a consortium if done wrong, and the regulation of crypto assets in an international settings is only one of the rabbit wholes consortia may be trapped in. Token economics require transparency as the principle guiding principle! Many other components of a blockchain governance refer to a very heterogeneous and rapidly evolving landscape of international regulation, laws, policies, and the liabilities that can be encountered in this landscape can be challenging for organisations to oversee.","title":"Matrix structure"},{"location":"Introduction/#strategies-for-publicly-identifiable-legal-entities","text":"Existing public networks shifted some of the mentioned issues of governance towards the layer of the technical protocol and code-based rules. Other issues simply remained unaddressed and unresolved, thereby transitioning the projects into a legal grey area. Both strategies \u2013 trying to respond to regulatory issues concerning one specific component by putting the burden to solve this issue on another, or trying to simply ignore issues at stake, are not an option for public-permissioned blockchain networks, that are operated by a consortium of possibly known and established organizations. The fact that publicly identifiable legal entities collaborate to collectively operate a system makes the operators responsible for the system, as well as for activities that occur in this system. All too often the governance model of public-permissioned consortium-run blockchain networks lacks the quality which is required to serve the goals and use cases of that particular blockchain network. To improve on this situation we are proposing the eco Blockchain Governance Framework. The eBGF will support the conception and creation of a proper governance for specific individual blockchain consortia in order to operate a professional, production-grade, public-permissioned, consortial blockchain network.","title":"Strategies for publicly identifiable legal entities"},{"location":"Introduction/#the-ebgf","text":"The eBGF will serve as an abstract collection of topics that need to be addressed in order to operate a professional, production-grade, public-permissioned blockchain network. The eBGF will offer structure, questions, considerations, thoughts, guidelines, links and recommendations for standards and best practices of technical implementations. It will document experiences regarding technical monitoring, hardware and software requirements, policies updates, backup and disaster recovery. It will describe the processes for off- and on-boarding of members into the network as well as proposing and executing changes to the governance itself, and it will address many more aspects. However, it will not define a specific blockchain governance which defines answers to all issues of any blockchain governance. But addressing and locating issues of specific components on distinctive layers alone is a first step to finding solutions and improve the reliability and quality of the network and services. Addressing and locating issues of specific components on distinctive layers of a blockchain governance framework will also allow to evaluate and compare different networks protocols and governance models to each other and create greater transparency and trust in the blockchain networks of the future. Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-04-13","title":"The eBGF"},{"location":"about/","text":"Project partners Project initiators eco \u2013 German Association of the Internet Industry eco or the Verband der deutschen Internetwirtschaft e.V is the largest organisation for the Internet industry in Europe and the Internet Authority in Germany, promoting the commercial and non-commercial use of the Internet. eco represents over 1,100 international member companies. eco operates the largest national data exchange, the De-CIX (Deutscher Commercial Internet Exchange). Institute for Internet Security \u2013 if(is) . The Institute for Internet Security \u2013 if(is) is an innovative, independent, scientific facility of the Westphalian University of Applied Sciences, headed by Prof. Norbert Pohlmann. The Blockchain Lab is part of the Institute for Internet Security if(is). Fraunhofer FIT Fraunhofer FIT is conducting R&D on user-friendly smart solutions that blend seamlessly in business processes, with expertise ranging from digitization and Industry 4.0 to IoT solutions. Its Blockchain Lab is led by Prof. Wolfgang Prinz. Project contributors EPN \u2013 European Public Network The European Public Network aims to become an ecosystem of distributed ledger technology research and business models. It strives to establish a legally compliant blockchain network.","title":"Project partners"},{"location":"about/#project-partners","text":"","title":"Project partners"},{"location":"about/#project-initiators","text":"","title":"Project initiators"},{"location":"about/#eco-german-association-of-the-internet-industry","text":"eco or the Verband der deutschen Internetwirtschaft e.V is the largest organisation for the Internet industry in Europe and the Internet Authority in Germany, promoting the commercial and non-commercial use of the Internet. eco represents over 1,100 international member companies. eco operates the largest national data exchange, the De-CIX (Deutscher Commercial Internet Exchange).","title":"eco \u2013 German Association of the Internet Industry"},{"location":"about/#institute-for-internet-security-ifis","text":"The Institute for Internet Security \u2013 if(is) is an innovative, independent, scientific facility of the Westphalian University of Applied Sciences, headed by Prof. Norbert Pohlmann. The Blockchain Lab is part of the Institute for Internet Security if(is).","title":"Institute for Internet Security \u2013 if(is)."},{"location":"about/#fraunhofer-fit","text":"Fraunhofer FIT is conducting R&D on user-friendly smart solutions that blend seamlessly in business processes, with expertise ranging from digitization and Industry 4.0 to IoT solutions. Its Blockchain Lab is led by Prof. Wolfgang Prinz.","title":"Fraunhofer FIT"},{"location":"about/#project-contributors","text":"","title":"Project contributors"},{"location":"about/#epn-european-public-network","text":"The European Public Network aims to become an ecosystem of distributed ledger technology research and business models. It strives to establish a legally compliant blockchain network.","title":"EPN \u2013 European Public Network"},{"location":"contact/","text":"Contact us The work on the eco Blockchain Governance Framework \u2013 eBGF is an open, transparent and collaborative project. We would like to invite anyone to reach out with questions or contribute to the project. You can use the following ways to get in touch or contribute: Add, edit, comment on GitHub: https://github.com/internet-sicherheit/eBGF Join our Discord server: https://discord.gg/AApe3mxbAu Write an e-mail to: posth (a\u00a7) internet-security.de","title":"Contact us"},{"location":"contact/#contact-us","text":"The work on the eco Blockchain Governance Framework \u2013 eBGF is an open, transparent and collaborative project. We would like to invite anyone to reach out with questions or contribute to the project. You can use the following ways to get in touch or contribute: Add, edit, comment on GitHub: https://github.com/internet-sicherheit/eBGF Join our Discord server: https://discord.gg/AApe3mxbAu Write an e-mail to: posth (a\u00a7) internet-security.de","title":"Contact us"},{"location":"faq/","text":"FAQ \u2013 Frequently Asked Questions Contribution Invitation to contribute How can I contribute to the eBGF? The work on the eBGF is an open, transparent and collaborative project. We would like to invite anyone with interest in contributing to the project to get in touch. You can use the following ways to contribute: Add, edit, comment on GitHub: https://github.com/internet-sicherheit/eBGF Join our Discord server: https://discord.gg/AApe3mxbAu Write an e-mail to: posth (a\u00a7) internet-security.de RFCs Definition of RFCs What are RFCs? RFCs (Request for Comments) are usually being used as a text format for technical documents and standards . For the eBGF we have adapted the original concept of RFCs for our purposes. In our context, RFCs are defined as text documents with a given structure, that will support collaborative writing on specific topics. You can think of RFCs as a form. Naming of RFCs How are RFCs named and numbered? New RFCs are named according to the topic, the number fitting the category. Any new RFC gets a 4 digit number, the first two digits define the category, the third digit the subcategory and the fourth digit the place in the sequence of documents within a subcategory. The name of the document should be short, distinct and recognizable. Please be sure to edit the mkdocs.yaml file once you create, delete or rename a document. Also note if a document has no '# Title' the yaml file defines the title on the website, the navigation stays untouched by the markdown files. Structure of RFCs How are RFCs structured? Abstract ( 1-2 sentences ) Content ** ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ** ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Please note that this structure might be due to changes in the process of the work and the progress of the writing. Text format for editing RFCs What is the text format for editing RFCs? All RFCs and other documents are written in markdown . Contributing to existing RFCs How can I comment or contribute to existing RFCs? Edits to existing RFCs can be committed and pushed to Github via pull requests. From there, updates to the website will happen automatically. To understand how the GitHub flow works, we recommend a quick 5 min. read: https://guides.github.com/introduction/flow/ Experienced users can use a GitHub Desktop Client.","title":"FAQ"},{"location":"faq/#faq-frequently-asked-questions","text":"","title":"FAQ \u2013 Frequently Asked Questions"},{"location":"faq/#contribution","text":"","title":"Contribution"},{"location":"faq/#invitation-to-contribute","text":"How can I contribute to the eBGF? The work on the eBGF is an open, transparent and collaborative project. We would like to invite anyone with interest in contributing to the project to get in touch. You can use the following ways to contribute: Add, edit, comment on GitHub: https://github.com/internet-sicherheit/eBGF Join our Discord server: https://discord.gg/AApe3mxbAu Write an e-mail to: posth (a\u00a7) internet-security.de","title":"Invitation to contribute"},{"location":"faq/#rfcs","text":"","title":"RFCs"},{"location":"faq/#definition-of-rfcs","text":"What are RFCs? RFCs (Request for Comments) are usually being used as a text format for technical documents and standards . For the eBGF we have adapted the original concept of RFCs for our purposes. In our context, RFCs are defined as text documents with a given structure, that will support collaborative writing on specific topics. You can think of RFCs as a form.","title":"Definition of RFCs"},{"location":"faq/#naming-of-rfcs","text":"How are RFCs named and numbered? New RFCs are named according to the topic, the number fitting the category. Any new RFC gets a 4 digit number, the first two digits define the category, the third digit the subcategory and the fourth digit the place in the sequence of documents within a subcategory. The name of the document should be short, distinct and recognizable. Please be sure to edit the mkdocs.yaml file once you create, delete or rename a document. Also note if a document has no '# Title' the yaml file defines the title on the website, the navigation stays untouched by the markdown files.","title":"Naming of RFCs"},{"location":"faq/#structure-of-rfcs","text":"How are RFCs structured? Abstract ( 1-2 sentences ) Content ** ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ** ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Please note that this structure might be due to changes in the process of the work and the progress of the writing.","title":"Structure of RFCs"},{"location":"faq/#text-format-for-editing-rfcs","text":"What is the text format for editing RFCs? All RFCs and other documents are written in markdown .","title":"Text format for editing RFCs"},{"location":"faq/#contributing-to-existing-rfcs","text":"How can I comment or contribute to existing RFCs? Edits to existing RFCs can be committed and pushed to Github via pull requests. From there, updates to the website will happen automatically. To understand how the GitHub flow works, we recommend a quick 5 min. read: https://guides.github.com/introduction/flow/ Experienced users can use a GitHub Desktop Client.","title":"Contributing to existing RFCs"},{"location":"news/","text":"News 16-18 March 2021 In March, the working group in eBGF were meeting up to attend our first writing sprint. The sprint was initiated by the German Association of the Internet Industry eco and the Blockchain Lab from the Institute for Internet Security \u2013 if(is) . On three days, a group of up to 15 people were having a number of writing sessions on the RFCs for the eBGF, the eco Blockchain Governance Framework (eBGF). These condensed sessions lay the groundwork for the content on these websites.","title":"News"},{"location":"news/#news","text":"","title":"News"},{"location":"news/#16-18-march-2021","text":"In March, the working group in eBGF were meeting up to attend our first writing sprint. The sprint was initiated by the German Association of the Internet Industry eco and the Blockchain Lab from the Institute for Internet Security \u2013 if(is) . On three days, a group of up to 15 people were having a number of writing sessions on the RFCs for the eBGF, the eco Blockchain Governance Framework (eBGF). These condensed sessions lay the groundwork for the content on these websites.","title":"16-18 March 2021"},{"location":"framework/glossar/","text":"Glossar Terms Block storage unity in the ledger, contains transactions and is cryptographically signed by its creator Entity legal individual or organisation Ledger digital register in which blocks are stored, ofter used interchangeably with blockchain Members entities that participate in the consortium Node server that runs the blockchain protocol User individual or organisation that interacts with a software application, an online service or a platform, a node Validator a node that participates in the consensus protocol, i.e. may create blocks","title":"Glossar"},{"location":"framework/glossar/#glossar","text":"","title":"Glossar"},{"location":"framework/glossar/#terms","text":"Block storage unity in the ledger, contains transactions and is cryptographically signed by its creator Entity legal individual or organisation Ledger digital register in which blocks are stored, ofter used interchangeably with blockchain Members entities that participate in the consortium Node server that runs the blockchain protocol User individual or organisation that interacts with a software application, an online service or a platform, a node Validator a node that participates in the consensus protocol, i.e. may create blocks","title":"Terms"},{"location":"framework/references/","text":"Unsorted List of References \u2018Banding Together for Blockchain\u2019. Accessed 30 March 2021. https://www2.deloitte.com/us/en/insights/focus/signals-for-strategists/emergence-of-blockchain-consortia.html . Beck, Roman, Christoph M\u00fcller-Bloch, and John King. \u2018Governance in the Blockchain Economy: A Framework and Research Agenda\u2019. Journal of the Association for Information Systems 19, no. 10 (31 October 2018). https://aisel.aisnet.org/jais/vol19/iss10/1 . \u2018Blockchain and the GDPR: Solutions for a Responsible Use of the Blockchain in the Context of Personal Data | CNIL\u2019. Accessed 12 April 2021. https://www.cnil.fr/en/blockchain-and-gdpr-solutions-responsible-use-blockchain-context-personal-data . 101 Blockchains. \u2018Blockchain Governance Principles: Everything You Need To Know\u2019, 19 August 2020. https://101blockchains.com/blockchain-governance/ . De Filippi, Primavera, Morshed Mannan, and Wessel Reijers. \u2018Blockchain as a Confidence Machine: The Problem of Trust & Challenges of Governance\u2019. Technology in Society 62 (1 August 2020): 101284. https://doi.org/10.1016/j.techsoc.2020.101284 . Dhillon, Vikram, David Metcalf, and Max Hooper. \u2018Rise of Blockchain Consortia\u2019. Blockchain Enabled Applications , 5 January 2021, 335\u201343. https://doi.org/10.1007/978-1-4842-6534-5_15 . Dib, Omar, Kei-L\u00e9o Brousmiche, Antoine Durand, Eric Thea, and Elyes Ben Hamida. \u2018Consortium Blockchains: Overview, Applications and Challenges\u2019. International Journal On Advances in Telecommunications , 2018. https://hal.archives-ouvertes.fr/hal-02271063 . \u2018Eichler et al. - Blockchain, Data Protection, and the GDPR.Pdf\u2019. Accessed 12 April 2021. https://www.bundesblock.de/wp-content/uploads/2019/01/GDPR_Position_Paper_v1.0.pdf . Eichler, Natalie, Silvan Jongerius, Greg McMullen, Oliver Naegele, and Kai Wagner. \u2018Blockchain, Data Protection, and the GDPR\u2019, n.d., 9. European Parliament. Directorate General for Parliamentary Research Services. Blockchain and the General Data Protection Regulation: Can Distributed Ledgers Be Squared with European Data Protection Law? LU: Publications Office, 2019. https://data.europa.eu/doi/10.2861/535 . Finck, Mich\u00e8le. \u2018Blockchains and Data Protection in the European Union\u2019, no. 18 (n.d.): 32. Graf, M., R. K\u00fcsters, and D. Rausch. \u2018Accountability in a Permissioned Blockchain: Formal Analysis of Hyperledger Fabric\u2019. In 2020 IEEE European Symposium on Security and Privacy (EuroS P) , 236\u201355, 2020. https://doi.org/10.1109/EuroSP48549.2020.00023 . Humbeeck, Andries Van. \u2018The Blockchain-GDPR Paradox\u2019. Journal of Data Protection & Privacy , 1 March 2019. https://hstalks.com/article/4997/the-blockchain-gdpr-paradox/ . Kim, Shiho, and Ganesh Chandra Deka, eds. Advanced Applications of Blockchain Technology . Vol. 60. Studies in Big Data. Singapore: Springer Singapore, 2020. https://doi.org/10.1007/978-981-13-8775-3 . Kumar, Randhir, and Rakesh Tripathi. \u2018Scalable and Secure Access Control Policy for Healthcare System Using Blockchain and Enhanced Bell\u2013LaPadula Model\u2019. Journal of Ambient Intelligence and Humanized Computing 12, no. 2 (February 2021): 2321\u201338. https://doi.org/10.1007/s12652-020-02346-8 . Pelt, Rowan van, Slinger Jansen, Djuri Baars, and Sietse Overbeek. \u2018Defining Blockchain Governance: A Framework for Analysis and Comparison\u2019. Information Systems Management 38, no. 1 (2 January 2021): 21\u201341. https://doi.org/10.1080/10580530.2020.1720046 . \u2018Snapshot\u2019. Accessed 8 April 2021. https://hstalks.com/article/4997/the-blockchain-gdpr-paradox/ . Walch, Angela. \u2018In Code(Rs) We Trust: Software Developers as Fiduciaries in Public Blockchains\u2019. SSRN Scholarly Paper. Rochester, NY: Social Science Research Network, 27 June 2018. https://papers.ssrn.com/abstract=3203198 . Weking, J\u00f6rg, Michael Mandalenakis, Andreas Hein, Sebastian Hermes, Markus B\u00f6hm, and Helmut Krcmar. \u2018The Impact of Blockchain Technology on Business Models \u2013 a Taxonomy and Archetypal Patterns\u2019. Electronic Markets 30, no. 2 (June 2020): 285\u2013305. https://doi.org/10.1007/s12525-019-00386-3 . Blockgeeks. \u2018What Is Blockchain Governance: Ultimate Beginner\u2019s Guide\u2019, 25 October 2019. https://blockgeeks.com/guides/what-is-blockchain-governance-ultimate-beginners-guide/ . JD Supra. \u2018Why the CPRA Is a Step Forward for Privacy but a Step Backwards for Blockchain\u2019. Accessed 12 April 2021. https://www.jdsupra.com/legalnews/why-the-cpra-is-a-step-forward-for-9644692/ . \u201eSovrin-Ledger-Access-Policies-V2.pdf\u201c. Accessed 14 April 2021. https://sovrin.org/wp-content/uploads/Sovrin-Ledger-Access-Policies-V2.pdf .","title":"References"},{"location":"framework/references/#unsorted-list-of-references","text":"\u2018Banding Together for Blockchain\u2019. Accessed 30 March 2021. https://www2.deloitte.com/us/en/insights/focus/signals-for-strategists/emergence-of-blockchain-consortia.html . Beck, Roman, Christoph M\u00fcller-Bloch, and John King. \u2018Governance in the Blockchain Economy: A Framework and Research Agenda\u2019. Journal of the Association for Information Systems 19, no. 10 (31 October 2018). https://aisel.aisnet.org/jais/vol19/iss10/1 . \u2018Blockchain and the GDPR: Solutions for a Responsible Use of the Blockchain in the Context of Personal Data | CNIL\u2019. Accessed 12 April 2021. https://www.cnil.fr/en/blockchain-and-gdpr-solutions-responsible-use-blockchain-context-personal-data . 101 Blockchains. \u2018Blockchain Governance Principles: Everything You Need To Know\u2019, 19 August 2020. https://101blockchains.com/blockchain-governance/ . De Filippi, Primavera, Morshed Mannan, and Wessel Reijers. \u2018Blockchain as a Confidence Machine: The Problem of Trust & Challenges of Governance\u2019. Technology in Society 62 (1 August 2020): 101284. https://doi.org/10.1016/j.techsoc.2020.101284 . Dhillon, Vikram, David Metcalf, and Max Hooper. \u2018Rise of Blockchain Consortia\u2019. Blockchain Enabled Applications , 5 January 2021, 335\u201343. https://doi.org/10.1007/978-1-4842-6534-5_15 . Dib, Omar, Kei-L\u00e9o Brousmiche, Antoine Durand, Eric Thea, and Elyes Ben Hamida. \u2018Consortium Blockchains: Overview, Applications and Challenges\u2019. International Journal On Advances in Telecommunications , 2018. https://hal.archives-ouvertes.fr/hal-02271063 . \u2018Eichler et al. - Blockchain, Data Protection, and the GDPR.Pdf\u2019. Accessed 12 April 2021. https://www.bundesblock.de/wp-content/uploads/2019/01/GDPR_Position_Paper_v1.0.pdf . Eichler, Natalie, Silvan Jongerius, Greg McMullen, Oliver Naegele, and Kai Wagner. \u2018Blockchain, Data Protection, and the GDPR\u2019, n.d., 9. European Parliament. Directorate General for Parliamentary Research Services. Blockchain and the General Data Protection Regulation: Can Distributed Ledgers Be Squared with European Data Protection Law? LU: Publications Office, 2019. https://data.europa.eu/doi/10.2861/535 . Finck, Mich\u00e8le. \u2018Blockchains and Data Protection in the European Union\u2019, no. 18 (n.d.): 32. Graf, M., R. K\u00fcsters, and D. Rausch. \u2018Accountability in a Permissioned Blockchain: Formal Analysis of Hyperledger Fabric\u2019. In 2020 IEEE European Symposium on Security and Privacy (EuroS P) , 236\u201355, 2020. https://doi.org/10.1109/EuroSP48549.2020.00023 . Humbeeck, Andries Van. \u2018The Blockchain-GDPR Paradox\u2019. Journal of Data Protection & Privacy , 1 March 2019. https://hstalks.com/article/4997/the-blockchain-gdpr-paradox/ . Kim, Shiho, and Ganesh Chandra Deka, eds. Advanced Applications of Blockchain Technology . Vol. 60. Studies in Big Data. Singapore: Springer Singapore, 2020. https://doi.org/10.1007/978-981-13-8775-3 . Kumar, Randhir, and Rakesh Tripathi. \u2018Scalable and Secure Access Control Policy for Healthcare System Using Blockchain and Enhanced Bell\u2013LaPadula Model\u2019. Journal of Ambient Intelligence and Humanized Computing 12, no. 2 (February 2021): 2321\u201338. https://doi.org/10.1007/s12652-020-02346-8 . Pelt, Rowan van, Slinger Jansen, Djuri Baars, and Sietse Overbeek. \u2018Defining Blockchain Governance: A Framework for Analysis and Comparison\u2019. Information Systems Management 38, no. 1 (2 January 2021): 21\u201341. https://doi.org/10.1080/10580530.2020.1720046 . \u2018Snapshot\u2019. Accessed 8 April 2021. https://hstalks.com/article/4997/the-blockchain-gdpr-paradox/ . Walch, Angela. \u2018In Code(Rs) We Trust: Software Developers as Fiduciaries in Public Blockchains\u2019. SSRN Scholarly Paper. Rochester, NY: Social Science Research Network, 27 June 2018. https://papers.ssrn.com/abstract=3203198 . Weking, J\u00f6rg, Michael Mandalenakis, Andreas Hein, Sebastian Hermes, Markus B\u00f6hm, and Helmut Krcmar. \u2018The Impact of Blockchain Technology on Business Models \u2013 a Taxonomy and Archetypal Patterns\u2019. Electronic Markets 30, no. 2 (June 2020): 285\u2013305. https://doi.org/10.1007/s12525-019-00386-3 . Blockgeeks. \u2018What Is Blockchain Governance: Ultimate Beginner\u2019s Guide\u2019, 25 October 2019. https://blockgeeks.com/guides/what-is-blockchain-governance-ultimate-beginners-guide/ . JD Supra. \u2018Why the CPRA Is a Step Forward for Privacy but a Step Backwards for Blockchain\u2019. Accessed 12 April 2021. https://www.jdsupra.com/legalnews/why-the-cpra-is-a-step-forward-for-9644692/ . \u201eSovrin-Ledger-Access-Policies-V2.pdf\u201c. Accessed 14 April 2021. https://sovrin.org/wp-content/uploads/Sovrin-Ledger-Access-Policies-V2.pdf .","title":"Unsorted List of References"},{"location":"framework/0-motivation/RFC-0010/","text":"Scope Abstract This section describes the types of blockchain networks the eBGF has its focus on. Motivation (todo) Elaboration Types of blockchain networks 1) Private-permissioned 2) Public-permissioned 3) Public-permissionless Focus of the eBGF The eBGF will provide a blockchain network and community governance framework that will focus on consortial blockchains . Consortial blockchains .. are public-permissioned blockchain networks, provide a transparent network and community governance, are institutionalised by a set of entities (individuals, companies, organizations or governments) who participate in various roles with different attributes in the network, are dedicated to a specific purpose in order to achieve a common goal. Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0010 Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-05","title":"Scope"},{"location":"framework/0-motivation/RFC-0010/#scope","text":"","title":"Scope"},{"location":"framework/0-motivation/RFC-0010/#abstract","text":"This section describes the types of blockchain networks the eBGF has its focus on.","title":"Abstract"},{"location":"framework/0-motivation/RFC-0010/#motivation","text":"(todo)","title":"Motivation"},{"location":"framework/0-motivation/RFC-0010/#elaboration","text":"","title":"Elaboration"},{"location":"framework/0-motivation/RFC-0010/#types-of-blockchain-networks","text":"1) Private-permissioned 2) Public-permissioned 3) Public-permissionless","title":"Types of blockchain networks"},{"location":"framework/0-motivation/RFC-0010/#focus-of-the-ebgf","text":"The eBGF will provide a blockchain network and community governance framework that will focus on consortial blockchains . Consortial blockchains .. are public-permissioned blockchain networks, provide a transparent network and community governance, are institutionalised by a set of entities (individuals, companies, organizations or governments) who participate in various roles with different attributes in the network, are dedicated to a specific purpose in order to achieve a common goal.","title":"Focus of the eBGF"},{"location":"framework/0-motivation/RFC-0010/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/0-motivation/RFC-0010/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/0-motivation/RFC-0010/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0010 Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/0-motivation/RFC-0020/","text":"Mission Statement Abstract This section is about the mission and vision statement. Motivation (todo) Elaboration (todo) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0020 Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-05","title":"Mission Statement"},{"location":"framework/0-motivation/RFC-0020/#mission-statement","text":"","title":"Mission Statement"},{"location":"framework/0-motivation/RFC-0020/#abstract","text":"This section is about the mission and vision statement.","title":"Abstract"},{"location":"framework/0-motivation/RFC-0020/#motivation","text":"(todo)","title":"Motivation"},{"location":"framework/0-motivation/RFC-0020/#elaboration","text":"(todo)","title":"Elaboration"},{"location":"framework/0-motivation/RFC-0020/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/0-motivation/RFC-0020/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/0-motivation/RFC-0020/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0020 Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/0-motivation/RFC-0030/","text":"Goals and Values Abstract This section is about the goals and values of the network. Motivation (todo) Elaboration (todo) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0030 Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-05","title":"Goals and Values"},{"location":"framework/0-motivation/RFC-0030/#goals-and-values","text":"","title":"Goals and Values"},{"location":"framework/0-motivation/RFC-0030/#abstract","text":"This section is about the goals and values of the network.","title":"Abstract"},{"location":"framework/0-motivation/RFC-0030/#motivation","text":"(todo)","title":"Motivation"},{"location":"framework/0-motivation/RFC-0030/#elaboration","text":"(todo)","title":"Elaboration"},{"location":"framework/0-motivation/RFC-0030/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/0-motivation/RFC-0030/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/0-motivation/RFC-0030/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0030 Contributing authors: Sebastian Posth Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/0-motivation/motivation/","text":"Motivation Introduction Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/0-motivation/motivation/#motivation-introduction","text":"","title":"Motivation Introduction"},{"location":"framework/0-motivation/motivation/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/0-motivation/motivation/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/0-motivation/motivation/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/0-motivation/motivation/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/0-motivation/motivation/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/0-motivation/motivation/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/1-organisation/Organisation/","text":"Organisation Introduction Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/1-organisation/Organisation/#organisation-introduction","text":"","title":"Organisation Introduction"},{"location":"framework/1-organisation/Organisation/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/1-organisation/Organisation/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/1-organisation/Organisation/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/1-organisation/Organisation/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/1-organisation/Organisation/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/1-organisation/Organisation/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/1-organisation/RFC-0111/","text":"Legal Institution Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0111 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Legal Institution"},{"location":"framework/1-organisation/RFC-0111/#legal-institution","text":"","title":"Legal Institution"},{"location":"framework/1-organisation/RFC-0111/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/1-organisation/RFC-0111/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/1-organisation/RFC-0111/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/1-organisation/RFC-0111/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/1-organisation/RFC-0111/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/1-organisation/RFC-0111/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0111 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/1-organisation/RFC-0121/","text":"Compliance Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0121 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Compliance"},{"location":"framework/1-organisation/RFC-0121/#compliance","text":"","title":"Compliance"},{"location":"framework/1-organisation/RFC-0121/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/1-organisation/RFC-0121/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/1-organisation/RFC-0121/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/1-organisation/RFC-0121/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/1-organisation/RFC-0121/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/1-organisation/RFC-0121/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0121 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/1-organisation/RFC-0131/","text":"Accountability Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0131 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Accountability"},{"location":"framework/1-organisation/RFC-0131/#accountability","text":"","title":"Accountability"},{"location":"framework/1-organisation/RFC-0131/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/1-organisation/RFC-0131/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/1-organisation/RFC-0131/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/1-organisation/RFC-0131/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/1-organisation/RFC-0131/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/1-organisation/RFC-0131/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0131 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/10-protocol/Protocol/","text":"Protocol Introduction Abstract The protocol topic is comprised of the components that bind the network architecture together, ranging from node specifications over consensus algorithms and ledger permissions up to security and scalability considerations. The section will also document protocol updates and maintanence measures as well as externally relevant aspects such the interoperability with other networks. Motivation In order to start and run a fully functional blockchain network the members need to dive into more technical aspects that enable the actual implementation of the system. Considerations on node functionality, how formal compliance requirements are realized, node monitoring as well as node software updates are central to running and mainteining a node. Furthermore, defining the possible spectrum of permissions that are available for the network actors is extremely useful for tailoring the capabilities of the users to the expected requirements. Scalability and security are well known to be mutually exclusive when decentrality is already present (blockchain trilemma), therefore treating both in a comprehensive manner can inform about their benefits and pitfalls. Finally, aspects relating to interoperability with other networks and protocol updates help with utilizing external resources and aid with rolling updates among the netowork members respectively. Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/10-protocol/Protocol/#protocol-introduction","text":"","title":"Protocol Introduction"},{"location":"framework/10-protocol/Protocol/#abstract","text":"The protocol topic is comprised of the components that bind the network architecture together, ranging from node specifications over consensus algorithms and ledger permissions up to security and scalability considerations. The section will also document protocol updates and maintanence measures as well as externally relevant aspects such the interoperability with other networks.","title":"Abstract"},{"location":"framework/10-protocol/Protocol/#motivation","text":"In order to start and run a fully functional blockchain network the members need to dive into more technical aspects that enable the actual implementation of the system. Considerations on node functionality, how formal compliance requirements are realized, node monitoring as well as node software updates are central to running and mainteining a node. Furthermore, defining the possible spectrum of permissions that are available for the network actors is extremely useful for tailoring the capabilities of the users to the expected requirements. Scalability and security are well known to be mutually exclusive when decentrality is already present (blockchain trilemma), therefore treating both in a comprehensive manner can inform about their benefits and pitfalls. Finally, aspects relating to interoperability with other networks and protocol updates help with utilizing external resources and aid with rolling updates among the netowork members respectively.","title":"Motivation"},{"location":"framework/10-protocol/Protocol/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/10-protocol/Protocol/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/10-protocol/Protocol/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/10-protocol/Protocol/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1007/","text":"Different node types and classes Abstract This RFC describes the different types and classes of nodes and displays their attributes. Motivation To operate a blockchain network it is important to know the different node types and classes and how to use them correctly. There are several ways to operate a node. To get an overview of all possible ways. Dividing nodes and members in different types and classes allows one to use design patterns like principle of least privilege or efficient resource handling. Elaboration The following is an overview of the different types and classes of a node (the list is not exhaustive): Types Full Node Stores full blockchain data. Participates in block validation, verifies all blocks and states. All states can be derived from a full node. Serves the network and provides data on request. Light Node Stores the header chain and requests everything else. Can verify the validity of the data against the state roots in the block headers. Useful for low capacity devices. Service Node Todo Forensic/audit/witness Node Todo Validator Node: Relevant for networks that use a validation based consensus (e.g. DASH, Tendermint) Propose and vote on new blocks Different ways exists how to incentivise correct behavior for validator nodes, e.g. Proof of Stake or exclusion from the network Mining node: Relevant for networks that use a Proof of Work based consensus (for consortium changes often in combination with Proof of Stake consensus) Proposes new blocks to the network Needs access to full chain Observer Node: todo Other Node: todo Bootnode: Node that collects and maps addresses of nodes in the blockchain network Serves up to date addresses to new nodes that want to connect to the network Only for address exchange, does not participate in block validation, etc. Static node: Full node with static DNS name or IP address. Classes Depending on the point of view, these types can be further classified. (The following list is not comprehensive and can also be understood as an opinionated view) Technical view: Nodes that keep the full blockchain: Full node Archive node Nodes that keep part of the blockchain: Light node Boot node Nodes that create new blocks Validator nodes Mining nodes Service view: Network support: Boot node Static node Blockchain data provider: Full node Archive node Boot node static node Block production: Validator node Mining node Consumers: Light nodes A drawback: There is too much fragmentation in the types and classes of nodes. There is no standard implementation because most blockchains are designed for a special use case (running dapps for public usage or offering a registry for self sovring identities in public or private networks) but all projects are oriented towards the technology. This makes it very cluttered. Unresolved issue: Standardisation of the types and classes of nodes and the related compatibility of the block chain as a whole. References to best practices, examples The ethereum documentation can serve as an example for the types of nodes. If you want to run your own node, you should understand that there are different types of node that consume data differently. In fact, clients can run 3 different types of node - light, full and archive. There are also options of different sync strategies which enables faster synchronization time. Synchronization refers to how quickly it can get the most up-to-date information on Ethereum's state. Full node Stores full blockchain data. Participates in block validation, verifies all blocks and states. All states can be derived from a full node. Serves the network and provides data on request. Light node Stores the header chain and requests everything else. Can verify the validity of the data against the state roots in the block headers. Useful for low capacity devices, such as embedded devices or mobile phones, which can't afford to store gigabytes of blockchain data. Archive node Stores everything kept in the full node and builds an archive of historical states. Needed if you want to query something like an account balance at block #4,000,000. These data represent units of terabytes which makes archive nodes less attractive for average users but can be handy for services like block explorers, wallet vendors, and chain analytics. Syncing clients in any mode other than archive will result in pruned blockchain data. This means, there is no archive of all historical state but the full node is able to build them on demand. We can look at the Sovrin Steward Technical and Organizational Policies as an example implementation for node classes: A Steward Node: * MUST be available to run as a Validator Node or Observer Node on any of the formal ledgers that make up the Sovrin Network. We can also take a look at the Hyperledger Besu documentation as an example of the use of bootnodes: Using Bootnodes is a method for initially discovering peers. Bootnodes are regular nodes used to discover other nodes. Bootnodes and static nodes are parallel methods for finding peers. Depending on your use case, you can use only bootnodes, only static nodes, or both bootnodes and statics nodes. For example, you run multiple nodes on MainNet (discovery using bootnodes), but want to ensure your nodes are always connected (using static nodes). Bibliography of selected references Steward Technical and Organizational Policies Hyperledger Besu Ethereum RFC-1007 Authors: David Maas , Mirko Mollik , Ingo Keck Status: work in progress Last modified: 2020-09-09","title":"Different node types and classes"},{"location":"framework/10-protocol/RFC-1007/#different-node-types-and-classes","text":"","title":"Different node types and classes"},{"location":"framework/10-protocol/RFC-1007/#abstract","text":"This RFC describes the different types and classes of nodes and displays their attributes.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1007/#motivation","text":"To operate a blockchain network it is important to know the different node types and classes and how to use them correctly. There are several ways to operate a node. To get an overview of all possible ways. Dividing nodes and members in different types and classes allows one to use design patterns like principle of least privilege or efficient resource handling.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1007/#elaboration","text":"The following is an overview of the different types and classes of a node (the list is not exhaustive):","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1007/#types","text":"Full Node Stores full blockchain data. Participates in block validation, verifies all blocks and states. All states can be derived from a full node. Serves the network and provides data on request. Light Node Stores the header chain and requests everything else. Can verify the validity of the data against the state roots in the block headers. Useful for low capacity devices. Service Node Todo Forensic/audit/witness Node Todo Validator Node: Relevant for networks that use a validation based consensus (e.g. DASH, Tendermint) Propose and vote on new blocks Different ways exists how to incentivise correct behavior for validator nodes, e.g. Proof of Stake or exclusion from the network Mining node: Relevant for networks that use a Proof of Work based consensus (for consortium changes often in combination with Proof of Stake consensus) Proposes new blocks to the network Needs access to full chain Observer Node: todo Other Node: todo Bootnode: Node that collects and maps addresses of nodes in the blockchain network Serves up to date addresses to new nodes that want to connect to the network Only for address exchange, does not participate in block validation, etc. Static node: Full node with static DNS name or IP address.","title":"Types"},{"location":"framework/10-protocol/RFC-1007/#classes","text":"Depending on the point of view, these types can be further classified. (The following list is not comprehensive and can also be understood as an opinionated view) Technical view: Nodes that keep the full blockchain: Full node Archive node Nodes that keep part of the blockchain: Light node Boot node Nodes that create new blocks Validator nodes Mining nodes Service view: Network support: Boot node Static node Blockchain data provider: Full node Archive node Boot node static node Block production: Validator node Mining node Consumers: Light nodes A drawback: There is too much fragmentation in the types and classes of nodes. There is no standard implementation because most blockchains are designed for a special use case (running dapps for public usage or offering a registry for self sovring identities in public or private networks) but all projects are oriented towards the technology. This makes it very cluttered. Unresolved issue: Standardisation of the types and classes of nodes and the related compatibility of the block chain as a whole.","title":"Classes"},{"location":"framework/10-protocol/RFC-1007/#references-to-best-practices-examples","text":"The ethereum documentation can serve as an example for the types of nodes. If you want to run your own node, you should understand that there are different types of node that consume data differently. In fact, clients can run 3 different types of node - light, full and archive. There are also options of different sync strategies which enables faster synchronization time. Synchronization refers to how quickly it can get the most up-to-date information on Ethereum's state. Full node Stores full blockchain data. Participates in block validation, verifies all blocks and states. All states can be derived from a full node. Serves the network and provides data on request. Light node Stores the header chain and requests everything else. Can verify the validity of the data against the state roots in the block headers. Useful for low capacity devices, such as embedded devices or mobile phones, which can't afford to store gigabytes of blockchain data. Archive node Stores everything kept in the full node and builds an archive of historical states. Needed if you want to query something like an account balance at block #4,000,000. These data represent units of terabytes which makes archive nodes less attractive for average users but can be handy for services like block explorers, wallet vendors, and chain analytics. Syncing clients in any mode other than archive will result in pruned blockchain data. This means, there is no archive of all historical state but the full node is able to build them on demand. We can look at the Sovrin Steward Technical and Organizational Policies as an example implementation for node classes: A Steward Node: * MUST be available to run as a Validator Node or Observer Node on any of the formal ledgers that make up the Sovrin Network. We can also take a look at the Hyperledger Besu documentation as an example of the use of bootnodes: Using Bootnodes is a method for initially discovering peers. Bootnodes are regular nodes used to discover other nodes. Bootnodes and static nodes are parallel methods for finding peers. Depending on your use case, you can use only bootnodes, only static nodes, or both bootnodes and statics nodes. For example, you run multiple nodes on MainNet (discovery using bootnodes), but want to ensure your nodes are always connected (using static nodes).","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1007/#bibliography-of-selected-references","text":"Steward Technical and Organizational Policies Hyperledger Besu Ethereum RFC-1007 Authors: David Maas , Mirko Mollik , Ingo Keck Status: work in progress Last modified: 2020-09-09","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1008/","text":"Consensus Abstract This document describes the selection and usage of the consensus method or algorithm for a blockchain network. Motivation The choice of the consensus algorithm must be carefully evaluated and adapted to the respective situation. The governance model of consortium will massively guide the selection of the consensus algorithm. The consensus protocol defines the technical communication protocol by which the state in the network converges onto a singleton state, by means of creating and appending new blocks. The consensus defines the common up to date state of the system creates new blocks. The security and integrity are based on it. Consensus procedures are a crucial element of any blockchain network as they ensure that certain integrity and security guarantees of these decentralized systems are maintained. Agreement on the consensus and the implications of the chosen protocol is essential because the network has to use one and changing it one a for a running network is potentially expensive. Elaboration Types and Definitions of Consensus Algorithms Characteristics of Consensus Algorithms Examples for Consensus Algorithms For the trust relationships in a consortial blockchain, the following concepts should be considered for choosing a consensus algorithm: Proof of Authority (PoA) Proof of Importance Byzantine Fault Tolerance Crash Tolerance Proof of Elapsed Time (PoET, only available in Hyperledger Sawtooth on Intel CPU) The following consensus algorithmus are not recommended for public permissioned blockchain networks. Proof of Work is designed to be run in a permissionless network with untrusted participants. Proof of Stake (in combination with a PBFT consensus) necessarily require a native cryptocurrency or token with a significant value. Before choosing a consensus algorithm the attack vectors and trust assumptions of the system need to be considered because they imply the level of fault tolerance, i.e. Crash Fault Tolerance vs Byzantine Fault Tolerance. Crash Fault Tolerance protects against potential crashing nodes / nodes that experience frequent downtimes. Byzantine Fault Tolerance protects against dishonest nodes. With this regards, quantifiable criteria for those aspects, should be defined (e.g. BFT with 2n + 1, or <50% faulty nodes). Note that the safety of the network has to be evaluated against performance and costs considerations, while in addition, the acceptable intersection between safety and liveness[https://en.wikipedia.org/wiki/Liveness] needs to be defined and understood. For a productive implementation it is recommended to use one of the Practical Byzantine Fault Tolerance (PBFT) consensus algorithms. This is used by Hyperledger Besu, among others. However, the choice of the consensus algorithm must be carefully evaluated and adapted to the respective situation. A further distinction needs to be made between PoA and PBFT. Both families of algorithms are well-suited for permissioned networks. However, there is a trade-off the members need to be aware of. PBFT favors safety, i.e. the instant finality of blocks, whereas PoA algorithms favor liveness, i.e. a stable block time without halts in the case of not reaching the \u2154 majority immediately. In both cases, the number of validators participating in the consensus is limited, either because of the communication complexity (PBFT) or because of the delayed finality (PoA). Should the algorithm be optimized? As a rule of thumb, algorithms relevant for security should never be changed by end users or \u201coptimized\u201d. Instead the standards defined by experts in the field should always be used. The correct selection of algorithms and their parameters requires deep knowledge of the field, and any deviation from the standard may create risks in other areas the user may not be aware of. Drawbacks: While the chosen algorithm might have pros and cons, implementing the RFC has not and is a requirement. Unresolved Issues: Maturity level of consensus algorithm Many problems of attacks can be mitigated by enforcing registered participants. This can be an easy solution for consortium blockchains References to best practices, examples There might be a number of different concrete consensus algorithms, that implement such concepts, for example for PoA: AuRa(TODO: link) or IBFT for PoA. Practical Byzantine Fault Tolerance (PBFT, e.g. Tendermint, IBFT, BFT-SMaRt) Raft Govdigital Govdigital decision 2020: Hyperledger Besu with IBFT2 Govdigital decision 2020: Go Etherum with Clique not production ready Sovrin We can look at the Sovrin Steward Technical and Organizational Policies as an example implementation: Node Selection Algorithm The selection of active Validator Nodes at any point in time, at least on the Sovrin Main Network, MUST be governed by the Node Selection Algorithm as specified by the Sovrin TGB. Non-technical inputs or policy decisions implemented by the Node Selection Algorithm MUST be approved by the Sovrin Board of Trustees. At any point in time, the Node Selection Algorithm MUST represent the TGB\u2019s best efforts at designing an algorithm that applies the Core Principles of the Sovrin Governance Framework. Recognizing the inherent tension and tradeoffs between some of the Core Principles, the design of this algorithm should give priority to balancing: a. The Decentralization by Design principles, in particular the principles of Diffuse Trust and High Availability. b. The Security by Design principles, in particular the principles of System Diversity and Secure Failure. A human-readable, understandable, and explainable description of the current design of the algorithm as approved by the TGB MUST be published by the TGB in the official Sovrin Code Repository and made publicly visible via a web page on the Sovrin Foundation website. Hyperledger Besu Besu offers a set of Hyperledger Besu implements the following consensus protocols: Ethash (Proof of Work) Clique (Proof of Authority) IBFT 2.0 (Proof of Authority) Quorum IBFT 1.0 (Proof of Authority). Comparing Proof of Authority consensus protocols Besu implements the Clique and IBFT 2.0 Proof of Authority consensus protocols. Proof of Authority consensus protocols work when participants know each other and there is a level of trust between them. For example, in a permissioned consortium network. Proof of Authority consensus protocols have faster block times and a much greater transaction throughput than the Ethash Proof of Work consensus protocol used on the Ethereum MainNet. In Clique and IBFT 2.0, a group of nodes in the network act as signers (Clique) or validators (IBFT 2.0). The existing nodes in the signer/validator pool vote to add nodes to or remove nodes from the pool. Bibliography of selected references Sovrin Steward Technical and Organizational Policies Hyperledger Besu Overview-Consensus RFC-1008 Authors: David Maas , Ingo Keck , Andrei Ionita , Zoltan Fazekas , Kevin Wittek , Mirko Mollik Status: work in progress Last modified: 2021-03-16","title":"Consensus"},{"location":"framework/10-protocol/RFC-1008/#consensus","text":"","title":"Consensus"},{"location":"framework/10-protocol/RFC-1008/#abstract","text":"This document describes the selection and usage of the consensus method or algorithm for a blockchain network.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1008/#motivation","text":"The choice of the consensus algorithm must be carefully evaluated and adapted to the respective situation. The governance model of consortium will massively guide the selection of the consensus algorithm. The consensus protocol defines the technical communication protocol by which the state in the network converges onto a singleton state, by means of creating and appending new blocks. The consensus defines the common up to date state of the system creates new blocks. The security and integrity are based on it. Consensus procedures are a crucial element of any blockchain network as they ensure that certain integrity and security guarantees of these decentralized systems are maintained. Agreement on the consensus and the implications of the chosen protocol is essential because the network has to use one and changing it one a for a running network is potentially expensive.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1008/#elaboration","text":"","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1008/#types-and-definitions-of-consensus-algorithms","text":"","title":"Types and Definitions of Consensus Algorithms"},{"location":"framework/10-protocol/RFC-1008/#characteristics-of-consensus-algorithms","text":"","title":"Characteristics of Consensus Algorithms"},{"location":"framework/10-protocol/RFC-1008/#examples-for-consensus-algorithms","text":"For the trust relationships in a consortial blockchain, the following concepts should be considered for choosing a consensus algorithm: Proof of Authority (PoA) Proof of Importance Byzantine Fault Tolerance Crash Tolerance Proof of Elapsed Time (PoET, only available in Hyperledger Sawtooth on Intel CPU) The following consensus algorithmus are not recommended for public permissioned blockchain networks. Proof of Work is designed to be run in a permissionless network with untrusted participants. Proof of Stake (in combination with a PBFT consensus) necessarily require a native cryptocurrency or token with a significant value. Before choosing a consensus algorithm the attack vectors and trust assumptions of the system need to be considered because they imply the level of fault tolerance, i.e. Crash Fault Tolerance vs Byzantine Fault Tolerance. Crash Fault Tolerance protects against potential crashing nodes / nodes that experience frequent downtimes. Byzantine Fault Tolerance protects against dishonest nodes. With this regards, quantifiable criteria for those aspects, should be defined (e.g. BFT with 2n + 1, or <50% faulty nodes). Note that the safety of the network has to be evaluated against performance and costs considerations, while in addition, the acceptable intersection between safety and liveness[https://en.wikipedia.org/wiki/Liveness] needs to be defined and understood. For a productive implementation it is recommended to use one of the Practical Byzantine Fault Tolerance (PBFT) consensus algorithms. This is used by Hyperledger Besu, among others. However, the choice of the consensus algorithm must be carefully evaluated and adapted to the respective situation. A further distinction needs to be made between PoA and PBFT. Both families of algorithms are well-suited for permissioned networks. However, there is a trade-off the members need to be aware of. PBFT favors safety, i.e. the instant finality of blocks, whereas PoA algorithms favor liveness, i.e. a stable block time without halts in the case of not reaching the \u2154 majority immediately. In both cases, the number of validators participating in the consensus is limited, either because of the communication complexity (PBFT) or because of the delayed finality (PoA). Should the algorithm be optimized? As a rule of thumb, algorithms relevant for security should never be changed by end users or \u201coptimized\u201d. Instead the standards defined by experts in the field should always be used. The correct selection of algorithms and their parameters requires deep knowledge of the field, and any deviation from the standard may create risks in other areas the user may not be aware of. Drawbacks: While the chosen algorithm might have pros and cons, implementing the RFC has not and is a requirement. Unresolved Issues: Maturity level of consensus algorithm Many problems of attacks can be mitigated by enforcing registered participants. This can be an easy solution for consortium blockchains","title":"Examples for Consensus Algorithms"},{"location":"framework/10-protocol/RFC-1008/#references-to-best-practices-examples","text":"There might be a number of different concrete consensus algorithms, that implement such concepts, for example for PoA: AuRa(TODO: link) or IBFT for PoA. Practical Byzantine Fault Tolerance (PBFT, e.g. Tendermint, IBFT, BFT-SMaRt) Raft","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1008/#govdigital","text":"Govdigital decision 2020: Hyperledger Besu with IBFT2 Govdigital decision 2020: Go Etherum with Clique not production ready","title":"Govdigital"},{"location":"framework/10-protocol/RFC-1008/#sovrin","text":"We can look at the Sovrin Steward Technical and Organizational Policies as an example implementation: Node Selection Algorithm The selection of active Validator Nodes at any point in time, at least on the Sovrin Main Network, MUST be governed by the Node Selection Algorithm as specified by the Sovrin TGB. Non-technical inputs or policy decisions implemented by the Node Selection Algorithm MUST be approved by the Sovrin Board of Trustees. At any point in time, the Node Selection Algorithm MUST represent the TGB\u2019s best efforts at designing an algorithm that applies the Core Principles of the Sovrin Governance Framework. Recognizing the inherent tension and tradeoffs between some of the Core Principles, the design of this algorithm should give priority to balancing: a. The Decentralization by Design principles, in particular the principles of Diffuse Trust and High Availability. b. The Security by Design principles, in particular the principles of System Diversity and Secure Failure. A human-readable, understandable, and explainable description of the current design of the algorithm as approved by the TGB MUST be published by the TGB in the official Sovrin Code Repository and made publicly visible via a web page on the Sovrin Foundation website.","title":"Sovrin"},{"location":"framework/10-protocol/RFC-1008/#hyperledger-besu","text":"Besu offers a set of Hyperledger Besu implements the following consensus protocols: Ethash (Proof of Work) Clique (Proof of Authority) IBFT 2.0 (Proof of Authority) Quorum IBFT 1.0 (Proof of Authority). Comparing Proof of Authority consensus protocols Besu implements the Clique and IBFT 2.0 Proof of Authority consensus protocols. Proof of Authority consensus protocols work when participants know each other and there is a level of trust between them. For example, in a permissioned consortium network. Proof of Authority consensus protocols have faster block times and a much greater transaction throughput than the Ethash Proof of Work consensus protocol used on the Ethereum MainNet. In Clique and IBFT 2.0, a group of nodes in the network act as signers (Clique) or validators (IBFT 2.0). The existing nodes in the signer/validator pool vote to add nodes to or remove nodes from the pool.","title":"Hyperledger Besu"},{"location":"framework/10-protocol/RFC-1008/#bibliography-of-selected-references","text":"Sovrin Steward Technical and Organizational Policies Hyperledger Besu Overview-Consensus RFC-1008 Authors: David Maas , Ingo Keck , Andrei Ionita , Zoltan Fazekas , Kevin Wittek , Mirko Mollik Status: work in progress Last modified: 2021-03-16","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1009/","text":"Security Abstract The following sections of this document provide operational security guidelines. Motivation Operational security guidelines are required to operate a secure blockchain infrastructure and software. Only in this way, a certain level of security and trust can be guaranteed. Elaboration The following specifications should be implemented: Secure organizational structure Continuous global safe operation Regulate security for administrative operations Ongoing operation and integrity of your employees Physical security requirements Security requirements for outsourcing to a third-party provider Compliance directive for the operator Authentication and authorization of the stewards and nodes in the network Certified that the nodes running in a secure environment Separation of public and internal systems regulated Possibilities of remote maintenance Realization of access control Update intervals of nodes and internal systems Regulation of access control over the network Authorization of the nodes in the network Ensuring the ongoing integrity of the system and software Emergency concept Drawback: Too high safety requirements could lead to less network members. Unresolved questions: Uniform certified regulations for Blockchain operators. References to best practices, examples We can look at the Sovrin Steward Technical and Organizational Policies as an example implementation: General Security Policies 1. A Steward MUST maintain and follow IT security policies and practices that are integral to maintain protection of all services provided in association with the Sovrin Steward Agreement (\u201cSteward Services\u201d). These policies MUST be mandatory for all employees of the Steward involved with providing the Steward Services. The Steward shall designate its CIO or another officer to provide executive oversight for such policies, including formal governance and revision management, employee education, and compliance enforcement. A Steward MUST review its IT security policies at least annually and amend such policies as the Steward deems reasonable to maintain protection of its Steward Services. Because Node administrators are a potential threat vector, a Steward MUST maintain and follow its standard mandatory employment verification requirements for all new hires involved with providing its Steward Services and will extend such requirements to wholly-owned subsidiaries involved with providing its Steward Services. In accordance with the Steward's internal process and procedures, these requirements MUST be periodically reviewed and include, but may not be limited to, criminal background checks, proof of identity validation, and additional checks as deemed necessary by the Steward. Each Steward company is responsible for implementing these requirements in its hiring process as applicable and permitted under local law. Employees of a Steward involved with providing its Steward Services MUST complete security and privacy education annually and certify each year that they will comply with the Steward's ethical business conduct, confidentiality, security, privacy, and data protection policies. Additional policy and process training MUST be provided to persons granted administrative access to components that are specific to their role within the Steward's operation and support of its Steward Services. If a Steward hosts its Node in its own data center, the Steward\u2019s security policies MUST also adequately address physical security and entry control according to industry best practices. If the Steward hosts its Node using a third-party Hosting Provider, the Steward MUST ensure that the security, privacy, and data protection policies of the Hosting Provider meet the requirements in this document. A Steward MUST make available to the Sovrin Foundation upon request evidence of stated compliance with these policies and any relevant accreditations held by the Steward, including certificates, attestations, or reports resulting from accredited third-party audits, such as ISO 27001, SSAE SOC 2, or other industry standards. Node Security Policies A Steward: MUST maintain Steward keys on a separate machine from the machine that runs their node. This machine, called the \u201cCLI (Command Line Interface) system\u201d, uses Steward keys to authorize the Node to participate in the pool, and is thus the basis for trust for the node and the Steward\u2019s identity on the network. The CLI system is not required to have high-end hardware, but in terms of IT best practices for security, it must meet or exceed the standards for the Node (see following items). MUST provide certification that their Node runs in a locked datacenter with appropriate levels of security, including the specifications that they target (e.g., SSAE 16 type II compliance; other standards may also be acceptable). MUST assert that their Node is isolated from internal systems of a Steward (because the Validator Node is publicly visible and thus an inappropriate candidate for access to privileged internal networks). MUST assert that their Node, and its underlying systems, uses state-of-the-art authentication for remote access (at least SSH with key plus password plus source IP firewall rule, and two-factor authentication wherever possible). MUST NOT allow access (remote or local) to the Node or CLI systems by anyone other than assigned admins. MUST apply the latest security patches within one (1) week or less (24 hours or less is recommended). MUST attest that the Node runs on a server protected by a firewall that, at minimum: Disallows public ingress except on ports used by the Node software (different machines may choose to expose ledger features on different ports, so no standard port setup is required). Optionally enables SSH, Remote Desktop, and similar remote access tools but constrains ingress for these tools in some way that excludes the public but allows access for admins. Locks down egress ports to limit the ability to jump from Node to some other location. MUST run the Steward security check tool as requested, and MUST receive TGB approval of the results before the Node is authorized to participate in consensus. MUST run the Steward security check tool from time to time as requested by the TGB and provide the test results report to the TGB within three (3) business days. The emergency concept should handle risks that threat the functionality of the network or components. Therefore, it should cover critical aspects like integrity, authenticity, availability, confidentiality, pseudonymity, decentralization, robustness against abusal, transparency, resource requirements and throughput. For general information on blockchain security take this or newer literature in consideration for security concepts: https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Krypto/Blockchain_Analyse.pdf?__blob=publicationFile&v=5 Bibliography of selected references Sovrin Governance Framework Steward Technical and Organisational Policies RFC-1009 Authors: David Maas , Kevin Wittek , Chinmay Khandekar , Daniel Theis Status: work in progress Last modified: 2020-10-21","title":"Security"},{"location":"framework/10-protocol/RFC-1009/#security","text":"","title":"Security"},{"location":"framework/10-protocol/RFC-1009/#abstract","text":"The following sections of this document provide operational security guidelines.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1009/#motivation","text":"Operational security guidelines are required to operate a secure blockchain infrastructure and software. Only in this way, a certain level of security and trust can be guaranteed.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1009/#elaboration","text":"The following specifications should be implemented: Secure organizational structure Continuous global safe operation Regulate security for administrative operations Ongoing operation and integrity of your employees Physical security requirements Security requirements for outsourcing to a third-party provider Compliance directive for the operator Authentication and authorization of the stewards and nodes in the network Certified that the nodes running in a secure environment Separation of public and internal systems regulated Possibilities of remote maintenance Realization of access control Update intervals of nodes and internal systems Regulation of access control over the network Authorization of the nodes in the network Ensuring the ongoing integrity of the system and software Emergency concept Drawback: Too high safety requirements could lead to less network members. Unresolved questions: Uniform certified regulations for Blockchain operators.","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1009/#references-to-best-practices-examples","text":"We can look at the Sovrin Steward Technical and Organizational Policies as an example implementation: General Security Policies 1. A Steward MUST maintain and follow IT security policies and practices that are integral to maintain protection of all services provided in association with the Sovrin Steward Agreement (\u201cSteward Services\u201d). These policies MUST be mandatory for all employees of the Steward involved with providing the Steward Services. The Steward shall designate its CIO or another officer to provide executive oversight for such policies, including formal governance and revision management, employee education, and compliance enforcement. A Steward MUST review its IT security policies at least annually and amend such policies as the Steward deems reasonable to maintain protection of its Steward Services. Because Node administrators are a potential threat vector, a Steward MUST maintain and follow its standard mandatory employment verification requirements for all new hires involved with providing its Steward Services and will extend such requirements to wholly-owned subsidiaries involved with providing its Steward Services. In accordance with the Steward's internal process and procedures, these requirements MUST be periodically reviewed and include, but may not be limited to, criminal background checks, proof of identity validation, and additional checks as deemed necessary by the Steward. Each Steward company is responsible for implementing these requirements in its hiring process as applicable and permitted under local law. Employees of a Steward involved with providing its Steward Services MUST complete security and privacy education annually and certify each year that they will comply with the Steward's ethical business conduct, confidentiality, security, privacy, and data protection policies. Additional policy and process training MUST be provided to persons granted administrative access to components that are specific to their role within the Steward's operation and support of its Steward Services. If a Steward hosts its Node in its own data center, the Steward\u2019s security policies MUST also adequately address physical security and entry control according to industry best practices. If the Steward hosts its Node using a third-party Hosting Provider, the Steward MUST ensure that the security, privacy, and data protection policies of the Hosting Provider meet the requirements in this document. A Steward MUST make available to the Sovrin Foundation upon request evidence of stated compliance with these policies and any relevant accreditations held by the Steward, including certificates, attestations, or reports resulting from accredited third-party audits, such as ISO 27001, SSAE SOC 2, or other industry standards. Node Security Policies A Steward: MUST maintain Steward keys on a separate machine from the machine that runs their node. This machine, called the \u201cCLI (Command Line Interface) system\u201d, uses Steward keys to authorize the Node to participate in the pool, and is thus the basis for trust for the node and the Steward\u2019s identity on the network. The CLI system is not required to have high-end hardware, but in terms of IT best practices for security, it must meet or exceed the standards for the Node (see following items). MUST provide certification that their Node runs in a locked datacenter with appropriate levels of security, including the specifications that they target (e.g., SSAE 16 type II compliance; other standards may also be acceptable). MUST assert that their Node is isolated from internal systems of a Steward (because the Validator Node is publicly visible and thus an inappropriate candidate for access to privileged internal networks). MUST assert that their Node, and its underlying systems, uses state-of-the-art authentication for remote access (at least SSH with key plus password plus source IP firewall rule, and two-factor authentication wherever possible). MUST NOT allow access (remote or local) to the Node or CLI systems by anyone other than assigned admins. MUST apply the latest security patches within one (1) week or less (24 hours or less is recommended). MUST attest that the Node runs on a server protected by a firewall that, at minimum: Disallows public ingress except on ports used by the Node software (different machines may choose to expose ledger features on different ports, so no standard port setup is required). Optionally enables SSH, Remote Desktop, and similar remote access tools but constrains ingress for these tools in some way that excludes the public but allows access for admins. Locks down egress ports to limit the ability to jump from Node to some other location. MUST run the Steward security check tool as requested, and MUST receive TGB approval of the results before the Node is authorized to participate in consensus. MUST run the Steward security check tool from time to time as requested by the TGB and provide the test results report to the TGB within three (3) business days. The emergency concept should handle risks that threat the functionality of the network or components. Therefore, it should cover critical aspects like integrity, authenticity, availability, confidentiality, pseudonymity, decentralization, robustness against abusal, transparency, resource requirements and throughput. For general information on blockchain security take this or newer literature in consideration for security concepts: https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Krypto/Blockchain_Analyse.pdf?__blob=publicationFile&v=5","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1009/#bibliography-of-selected-references","text":"Sovrin Governance Framework Steward Technical and Organisational Policies RFC-1009 Authors: David Maas , Kevin Wittek , Chinmay Khandekar , Daniel Theis Status: work in progress Last modified: 2020-10-21","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1010/","text":"Node software updates Abstract This RFC covers the software update policy for operating a blockchain node. This applies not only to the applications but also to the operating system. Motivation To create a safe environment throughout the blockchain network, software update guidelines are extremely important. All nodes must be updated at a certain interval to ensure safe operation. However, the actual process is quite complex as the entire network must be considered. Elaboration Update protocol Versioning Minor updates without interrupting the network Major updates should be planned Guaranteed availability of the system Drawbacks: Some update policies like blue-green can lower the security level. In this case the private key has to be shared between the current running system and a new one will replace it on the fly. Securing the wallet in a dedicated module with an API will make the node more complex, but allow the usage of a blue-green based protocol. Based on the update policy and the release schedule of the blockchain software the amount of updates can increase. If the update process cannot be automated as much as possible, too much interaction is required which can lead to human errors. Without checking the changes of the update the risk of new injected malicious code that can steal the wallet or even delete the chains on all nodes exists. So only versions verified by a trusted party should be used. Unresolved questions: A software update process with standardised guidelines for blockchain projects. A de facto standard for all blockchain technologies to ensure more security and simplification. References to best practices, examples Based on the version system there could be different protocols to update a node. If the software of the blockchain nodes follows the semantic versioning protocol, MINOR and PATCH updates should be updatable without breaking the network functionality. For major patches a coordinated update has to be planned and can lead to a short downtime of the network because of a change in the communication protocol. Beside the current node version the uptime of the system has to be guaranteed. An uncoordinated process can lead to a nonfunctional consensus. We can look at the Sovrin Steward Technical and Orgnaizatoinal Policies as an example implementation: A Steward Node: * MUST run a release of the Sovrin Open Source Code as approved and designated by the Technical Governance Board (TGB). * MUST facilitate an upgrade to a new version of the Sovrin Open Source Code within three (3) business days of a new release that has been: a) recommended by the Sovrin TGB, and b) accepted by a vote of any other relevant Sovrin Governing Body (such as the Steward Council). A clear and strict protocol has to be defined to avoid accidents like the \u00dcberlingen mid-air collision where the involved parties followed different suggestions. Bibliography of selected references Steward Technical and Orgnaizatoinal Policies RFC-1010 Authors: David Maas , Mirko Mollik Status: work in progress Last modified: 2020-09-09","title":"Node software updates"},{"location":"framework/10-protocol/RFC-1010/#node-software-updates","text":"","title":"Node software updates"},{"location":"framework/10-protocol/RFC-1010/#abstract","text":"This RFC covers the software update policy for operating a blockchain node. This applies not only to the applications but also to the operating system.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1010/#motivation","text":"To create a safe environment throughout the blockchain network, software update guidelines are extremely important. All nodes must be updated at a certain interval to ensure safe operation. However, the actual process is quite complex as the entire network must be considered.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1010/#elaboration","text":"Update protocol Versioning Minor updates without interrupting the network Major updates should be planned Guaranteed availability of the system Drawbacks: Some update policies like blue-green can lower the security level. In this case the private key has to be shared between the current running system and a new one will replace it on the fly. Securing the wallet in a dedicated module with an API will make the node more complex, but allow the usage of a blue-green based protocol. Based on the update policy and the release schedule of the blockchain software the amount of updates can increase. If the update process cannot be automated as much as possible, too much interaction is required which can lead to human errors. Without checking the changes of the update the risk of new injected malicious code that can steal the wallet or even delete the chains on all nodes exists. So only versions verified by a trusted party should be used. Unresolved questions: A software update process with standardised guidelines for blockchain projects. A de facto standard for all blockchain technologies to ensure more security and simplification.","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1010/#references-to-best-practices-examples","text":"Based on the version system there could be different protocols to update a node. If the software of the blockchain nodes follows the semantic versioning protocol, MINOR and PATCH updates should be updatable without breaking the network functionality. For major patches a coordinated update has to be planned and can lead to a short downtime of the network because of a change in the communication protocol. Beside the current node version the uptime of the system has to be guaranteed. An uncoordinated process can lead to a nonfunctional consensus. We can look at the Sovrin Steward Technical and Orgnaizatoinal Policies as an example implementation: A Steward Node: * MUST run a release of the Sovrin Open Source Code as approved and designated by the Technical Governance Board (TGB). * MUST facilitate an upgrade to a new version of the Sovrin Open Source Code within three (3) business days of a new release that has been: a) recommended by the Sovrin TGB, and b) accepted by a vote of any other relevant Sovrin Governing Body (such as the Steward Council). A clear and strict protocol has to be defined to avoid accidents like the \u00dcberlingen mid-air collision where the involved parties followed different suggestions.","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1010/#bibliography-of-selected-references","text":"Steward Technical and Orgnaizatoinal Policies RFC-1010 Authors: David Maas , Mirko Mollik Status: work in progress Last modified: 2020-09-09","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1011/","text":"Node monitoring Abstract This document describes the key elements of hardware monitoring and monitoring the status of node uptime and performance status. This RFC does not consider the monitoring of system logs. Motivation Due to the decentralized nature of the blockchain infrastructure, it is challenging to find an appropriate method for monitoring the status of all running nodes. Validating if a node is running or not is insufficient to determine the overall health of a specific node. A node as a virtual or physical appliance could be running, while the actual blockchain-specific process is not operational. Once adequate measures have been taken to properly monitor a node's performance, then an overall network health can be determined. Elaboration The following parameters are prerequisites for effective hardware monitoring and they are blockchain agnostic. However, there might be a qualitative difference for required monitoring, based on the type of node (e.g. validator vs. read-only nodes). General Selection of components to be monitored Selection of the measured variables What should be monitored Operating system System voltage & Uninterruptible power supply (UPS) Liveness and readiness of node process Connectivity of public ports CPU available/used Memory available/used Disk available/used Bandwidth available/used Link Speed How should it be monitored? Use of a watchdog (hardware or software) Sensor technology Storage technology for metrics Transmission protocols and architecture (push vs pull) Display of the measured values and visualisation Selection of the analysis method Alerting what to alert; The \"what\" can be inferred from standard operational practices and might be blockchain agnostic, e.g. selection of relevant metrics and criteria. how to alert RFC-0040:Collaboration who to alert RFC-0028: Accountability for network failures , RFC-0029: Accountability for content stored on the ledger Definition of sampling rates (per Metric) Selection of the transmission protocols Drawbacks: Monitoring the infrastructure layer introduces overhead caused by reporting processes. Monitoring the blockchain layer require resources. The process involves parsing the blockchain and creating a regular database with the parsed information. This may use 10 times more disk space as the blockchain itself uses. Disk, CPU and Memory requirements for monitoring the blockchain layer grows together with the blockchain disk footprint. Unresolved questions: Defining a process to ingest and visualize the data reported by the core nodes Defining a process for reporting hardware resource available and usage How to report the information needed for monitoring without granting more permissions that are required to perform the tasks. Establishing an alerting strategy when multiple node owners are involved References to best practices, examples Core nodes are different for each blockchain infrastructure architecture. Ethereum Public Network For public ethereum nodes, the bootnodes are the core nodes, as described in the documentation. The way the Ethereum team monitors their bootnodes has been addressed by P\u00e9ter Szil\u00e1gyi at Devcon 5 Monitoring an Ethereum infrastructure . The video describes monitoring at infrastructure layer. P\u00e9ter mentions they used DataDog, Graphana, Phrometheus and InfluxDB. The PoW mining nodes can also be monitored individually by each node owner. European Blockchain Services Infrastructure A mixture of various monitoring tools are used apparently by EBSI to monitor the infrastructure layer . One tool being mentioned is phpservermon . For the blockchain layer, this service category is mentioned in EBSI V1, however it may contain further monitoring tools . As of V1, the existing monitoring tools are block explorers. Finding an appropriate way of monitoring the infrastructure layer is challenging and is highly dependent on the infrastructure architecture. Security considerations have to be taken into account when the core nodes are owned and controlled by various parties. The blockchain layer monitoring can be easily adapted from a working solution if the underlying blockchain technology is the same (ie: Ethereum based blockchain) Hyperledger Besu Monitor Metrics Bibliography of selected references RFC-1011 Authors: Iosif Peterfi , David Maas , Chinmay Khandekar , Kevin Wittek , Andrei Ionita Status: work in progress Last modified: 2021-03-17","title":"Node Monitoring"},{"location":"framework/10-protocol/RFC-1011/#node-monitoring","text":"","title":"Node monitoring"},{"location":"framework/10-protocol/RFC-1011/#abstract","text":"This document describes the key elements of hardware monitoring and monitoring the status of node uptime and performance status. This RFC does not consider the monitoring of system logs.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1011/#motivation","text":"Due to the decentralized nature of the blockchain infrastructure, it is challenging to find an appropriate method for monitoring the status of all running nodes. Validating if a node is running or not is insufficient to determine the overall health of a specific node. A node as a virtual or physical appliance could be running, while the actual blockchain-specific process is not operational. Once adequate measures have been taken to properly monitor a node's performance, then an overall network health can be determined.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1011/#elaboration","text":"The following parameters are prerequisites for effective hardware monitoring and they are blockchain agnostic. However, there might be a qualitative difference for required monitoring, based on the type of node (e.g. validator vs. read-only nodes).","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1011/#general","text":"Selection of components to be monitored Selection of the measured variables","title":"General"},{"location":"framework/10-protocol/RFC-1011/#what-should-be-monitored","text":"Operating system System voltage & Uninterruptible power supply (UPS) Liveness and readiness of node process Connectivity of public ports CPU available/used Memory available/used Disk available/used Bandwidth available/used Link Speed","title":"What should be monitored"},{"location":"framework/10-protocol/RFC-1011/#how-should-it-be-monitored","text":"Use of a watchdog (hardware or software) Sensor technology Storage technology for metrics Transmission protocols and architecture (push vs pull) Display of the measured values and visualisation Selection of the analysis method Alerting what to alert; The \"what\" can be inferred from standard operational practices and might be blockchain agnostic, e.g. selection of relevant metrics and criteria. how to alert RFC-0040:Collaboration who to alert RFC-0028: Accountability for network failures , RFC-0029: Accountability for content stored on the ledger Definition of sampling rates (per Metric) Selection of the transmission protocols Drawbacks: Monitoring the infrastructure layer introduces overhead caused by reporting processes. Monitoring the blockchain layer require resources. The process involves parsing the blockchain and creating a regular database with the parsed information. This may use 10 times more disk space as the blockchain itself uses. Disk, CPU and Memory requirements for monitoring the blockchain layer grows together with the blockchain disk footprint. Unresolved questions: Defining a process to ingest and visualize the data reported by the core nodes Defining a process for reporting hardware resource available and usage How to report the information needed for monitoring without granting more permissions that are required to perform the tasks. Establishing an alerting strategy when multiple node owners are involved","title":"How should it be monitored?"},{"location":"framework/10-protocol/RFC-1011/#references-to-best-practices-examples","text":"Core nodes are different for each blockchain infrastructure architecture.","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1011/#ethereum-public-network","text":"For public ethereum nodes, the bootnodes are the core nodes, as described in the documentation. The way the Ethereum team monitors their bootnodes has been addressed by P\u00e9ter Szil\u00e1gyi at Devcon 5 Monitoring an Ethereum infrastructure . The video describes monitoring at infrastructure layer. P\u00e9ter mentions they used DataDog, Graphana, Phrometheus and InfluxDB. The PoW mining nodes can also be monitored individually by each node owner.","title":"Ethereum Public Network"},{"location":"framework/10-protocol/RFC-1011/#european-blockchain-services-infrastructure","text":"A mixture of various monitoring tools are used apparently by EBSI to monitor the infrastructure layer . One tool being mentioned is phpservermon . For the blockchain layer, this service category is mentioned in EBSI V1, however it may contain further monitoring tools . As of V1, the existing monitoring tools are block explorers. Finding an appropriate way of monitoring the infrastructure layer is challenging and is highly dependent on the infrastructure architecture. Security considerations have to be taken into account when the core nodes are owned and controlled by various parties. The blockchain layer monitoring can be easily adapted from a working solution if the underlying blockchain technology is the same (ie: Ethereum based blockchain)","title":"European Blockchain Services Infrastructure"},{"location":"framework/10-protocol/RFC-1011/#hyperledger-besu-monitor-metrics","text":"","title":"Hyperledger Besu Monitor Metrics"},{"location":"framework/10-protocol/RFC-1011/#bibliography-of-selected-references","text":"RFC-1011 Authors: Iosif Peterfi , David Maas , Chinmay Khandekar , Kevin Wittek , Andrei Ionita Status: work in progress Last modified: 2021-03-17","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1013/","text":"Backup and restore procedures Abstract This RFC gives a description of the backup and restore procedures for nodes. Motivation Due to the decentralised architecture, the data is basically secured and not lost in case of a problem. Nevertheless, the process can be accelerated by backing up the node data and protecting it against misuse. Elaboration Since the blockchain network guarantees by design replication of data, there is no need to backup the data that is stored in the ledger. In case of data loss, the node will synchronize all the blocks that are missing from the peer nodes to which it has established a connection. Apart from the ledger data, it is nevertheless critical to save pieces of data related to the identity of the operating node. This ensures that, in case of data loss, the node will be again running under the same identity, which is important to the node continuity, its recognition in the network, but also essential to the interaction with smart contracts, which otherwise may not grant it access. This includes the following data: node id/enode node keys/keystores related passwords (if at all saved) Furthermore, it is advisable to save all configurations that contribute to the running of the operating node. Such data includes: peer connectivity opened ports mining configuration internal paths For some blockchain technologies changes to the genesis block may need to be backed up. In cases where the ledger data needs to be secured by the network leader (e.g. Iron Throne in the Bloxberg case), then the following aspects should be observed when backing up and restoring data: Saving the node configuration Backup of the node data Time interval for the backup Automation of the backup routine Specify recovery routine Node reintegration procedure Routine for corrupt data Drawback: Due to the decentralised architecture, a backup should actually no longer be necessary and thus causes additional effort. Unresolved issued: **A standard implementation of backup and distributed data that automatically reconciles and restores the node configuration. Where no manual intervention is required. References to best practices, examples A possible implementation can be found at Hyperledger Besu : Backups In a decentralized blockchain, data replicates between nodes so it\u2019s not lost. But backing up configuration and data ensures a smoother recovery from corrupted data or other failures. Genesis file The genesis file for a network must be accessible on every node. We recommend storing the genesis file under source control. Data backups If installed locally, the default data location is the Besu installation directory. We recommend mounting a separate volume to store data . Use the `--data-path` command line option to pass the path to Besu. The default data location is the Besu installation directory, or `/opt/besu/database` if using the Besu Docker image . Having some data reduces the time to synchronize a new node. You can perform periodic backups of the data directory and send the data to your preferred backup mechanism. For example, cron job and rsync, archives to the cloud such as s3, or `tar.gz` archives. Data restores To restore data: 1. If the node is running, stop the node. 2. If required, move the data directory to another location for analysis. 3. Restore the data from your last known good backup to the same directory. 4. Ensure user permissions are valid so you can read from and write to the data directory. 5. Restart the node. Corrupted data If log messages signify a corrupt database, the cleanest way to recover is: Stop the node. Restore the data from a previous backup. Restart the node. Finding peers after restarting The process for finding peers after restarting is the same as for finding peers after upgrading and restarting . Bibliography of selected references Hyperledger Besu Backup and Restore RFC-1013 Authors: David Maas , Andrei Ionita Status: work in progress Last modified: 2021-03-18","title":"Backup and restore procedures"},{"location":"framework/10-protocol/RFC-1013/#backup-and-restore-procedures","text":"","title":"Backup and restore procedures"},{"location":"framework/10-protocol/RFC-1013/#abstract","text":"This RFC gives a description of the backup and restore procedures for nodes.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1013/#motivation","text":"Due to the decentralised architecture, the data is basically secured and not lost in case of a problem. Nevertheless, the process can be accelerated by backing up the node data and protecting it against misuse.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1013/#elaboration","text":"Since the blockchain network guarantees by design replication of data, there is no need to backup the data that is stored in the ledger. In case of data loss, the node will synchronize all the blocks that are missing from the peer nodes to which it has established a connection. Apart from the ledger data, it is nevertheless critical to save pieces of data related to the identity of the operating node. This ensures that, in case of data loss, the node will be again running under the same identity, which is important to the node continuity, its recognition in the network, but also essential to the interaction with smart contracts, which otherwise may not grant it access. This includes the following data: node id/enode node keys/keystores related passwords (if at all saved) Furthermore, it is advisable to save all configurations that contribute to the running of the operating node. Such data includes: peer connectivity opened ports mining configuration internal paths For some blockchain technologies changes to the genesis block may need to be backed up. In cases where the ledger data needs to be secured by the network leader (e.g. Iron Throne in the Bloxberg case), then the following aspects should be observed when backing up and restoring data: Saving the node configuration Backup of the node data Time interval for the backup Automation of the backup routine Specify recovery routine Node reintegration procedure Routine for corrupt data Drawback: Due to the decentralised architecture, a backup should actually no longer be necessary and thus causes additional effort. Unresolved issued: **A standard implementation of backup and distributed data that automatically reconciles and restores the node configuration. Where no manual intervention is required.","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1013/#references-to-best-practices-examples","text":"A possible implementation can be found at Hyperledger Besu : Backups In a decentralized blockchain, data replicates between nodes so it\u2019s not lost. But backing up configuration and data ensures a smoother recovery from corrupted data or other failures. Genesis file The genesis file for a network must be accessible on every node. We recommend storing the genesis file under source control. Data backups If installed locally, the default data location is the Besu installation directory. We recommend mounting a separate volume to store data . Use the `--data-path` command line option to pass the path to Besu. The default data location is the Besu installation directory, or `/opt/besu/database` if using the Besu Docker image . Having some data reduces the time to synchronize a new node. You can perform periodic backups of the data directory and send the data to your preferred backup mechanism. For example, cron job and rsync, archives to the cloud such as s3, or `tar.gz` archives. Data restores To restore data: 1. If the node is running, stop the node. 2. If required, move the data directory to another location for analysis. 3. Restore the data from your last known good backup to the same directory. 4. Ensure user permissions are valid so you can read from and write to the data directory. 5. Restart the node. Corrupted data If log messages signify a corrupt database, the cleanest way to recover is: Stop the node. Restore the data from a previous backup. Restart the node. Finding peers after restarting The process for finding peers after restarting is the same as for finding peers after upgrading and restarting .","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1013/#bibliography-of-selected-references","text":"Hyperledger Besu Backup and Restore RFC-1013 Authors: David Maas , Andrei Ionita Status: work in progress Last modified: 2021-03-18","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1016/","text":"Verification of node compliance Abstract This document describes the process of automatic verification of nodes with a specific compliance. Motivation To operate a safe environment at all times, it is important that the nodes meet certain requirements. Since a manual process would be too time-consuming, the automation of verified nodes is very important. Thereby any compliance should be defined. Elaboration To enable verification, the following points would have to be present: Compliance guidelines Observer Verification routines Time interval of the repetition A drawback would be: If security gaps could be exploited, automation would of course also be very dangerous. Unresolved question: It is not clear, if there is a way for a permission-free public Blockchain to adjust the compliance during operation without changing the code. References to best practices, examples Hyperledger Fabric [1] represents a compliance-friendly blockchain architecture. Policies are one of the things that make Hyperledger Fabric different from other blockchains like Ethereum or Bitcoin. In those systems, transactions can be generated and validated by any node in the network. The policies that govern the network are fixed at any point in time and can only be changed using the same process that governs the code. Because Fabric is a permissioned blockchain whose users are recognized by the underlying infrastructure, those users have the ability to decide on the governance of the network before it is launched, and change the governance of a running network. Sovrin uses a Python script [2] to perform the verification of nodes. This contains the following validation criteria: MUST run a server operating system that receives timely patches from its vendor or community. Run on a mainstream hypervisor Machine is dedicated to the validator, no other services Have 8 or more cores Have at least 32GB of RAM and 1-2+TB of reliable disk space Must be running NTP and maintain a system clock that is demonstrably in sync within two seconds. Run a firewall that disallows public ingress except on ports used by the validator node software or remote administration tools. Bibliography of selected references [1] Hyperledger Fabric [2] Sovrin Python Script RFC-1016: Authors: David Maas , Mirko Mollik , Kevin Wittek Status: work in progress Last modified: 2020-09-09","title":"Verification of node compliance"},{"location":"framework/10-protocol/RFC-1016/#verification-of-node-compliance","text":"","title":"Verification of node compliance"},{"location":"framework/10-protocol/RFC-1016/#abstract","text":"This document describes the process of automatic verification of nodes with a specific compliance.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1016/#motivation","text":"To operate a safe environment at all times, it is important that the nodes meet certain requirements. Since a manual process would be too time-consuming, the automation of verified nodes is very important. Thereby any compliance should be defined.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1016/#elaboration","text":"To enable verification, the following points would have to be present: Compliance guidelines Observer Verification routines Time interval of the repetition A drawback would be: If security gaps could be exploited, automation would of course also be very dangerous. Unresolved question: It is not clear, if there is a way for a permission-free public Blockchain to adjust the compliance during operation without changing the code.","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1016/#references-to-best-practices-examples","text":"Hyperledger Fabric [1] represents a compliance-friendly blockchain architecture. Policies are one of the things that make Hyperledger Fabric different from other blockchains like Ethereum or Bitcoin. In those systems, transactions can be generated and validated by any node in the network. The policies that govern the network are fixed at any point in time and can only be changed using the same process that governs the code. Because Fabric is a permissioned blockchain whose users are recognized by the underlying infrastructure, those users have the ability to decide on the governance of the network before it is launched, and change the governance of a running network. Sovrin uses a Python script [2] to perform the verification of nodes. This contains the following validation criteria: MUST run a server operating system that receives timely patches from its vendor or community. Run on a mainstream hypervisor Machine is dedicated to the validator, no other services Have 8 or more cores Have at least 32GB of RAM and 1-2+TB of reliable disk space Must be running NTP and maintain a system clock that is demonstrably in sync within two seconds. Run a firewall that disallows public ingress except on ports used by the validator node software or remote administration tools.","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1016/#bibliography-of-selected-references","text":"[1] Hyperledger Fabric [2] Sovrin Python Script RFC-1016: Authors: David Maas , Mirko Mollik , Kevin Wittek Status: work in progress Last modified: 2020-09-09","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1020/","text":"Interoperability Abstract This section describes semantic and technical interoperability with other networks. Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-1020 Contributing Authors: Status: Last modified:","title":"Interoperability"},{"location":"framework/10-protocol/RFC-1020/#interoperability","text":"","title":"Interoperability"},{"location":"framework/10-protocol/RFC-1020/#abstract","text":"This section describes semantic and technical interoperability with other networks.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1020/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/10-protocol/RFC-1020/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1020/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/10-protocol/RFC-1020/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/10-protocol/RFC-1020/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-1020 Contributing Authors: Status: Last modified:","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1035/","text":"Ledger write permissions Abstract This section provides an outline of the spectrum of writing access rights for parties on the distributed ledger. Motivation Write permissions allow to limit the access to the network operation and limit potential security risks. Elaboration The spectrum of writing permissions is composed of various levels: Writing a transaction and writing a block are two types of write permissions. Writing a transaction involves sending information to the network, which may go through a validation process, before it is added to a block in the ledger. The task of validating of a transaction may be included to the set of writing permissions. Any participating member that is not an authority member of the network may write transactions. Writing a block is the task of authority nodes. A write permission can be given for a specific type of transaction if it is supported by the ledger. Transfer transactions and smart contract transactions have different permission types. At one extreme, the amount of write permission can get in conflict with the decentralisation aspect. If only one party has write permission, the data are decentralized, but only one party controls what will be persisted. References to best practices, examples The Hyperledger Indy and the TrustChain blockchains define a bag of rules that can be attached to each participant. Since everyone has access to the source code to run a different type of client (a validator node, an endorser), the writing permission is bound to the identity. The validators that are responsible for the block creation process can validate the transactions and refuse them, if the author of the transaction has not the privilege to create this kind of transaction. In the context of an ethereum blockchain you can differentiate between writing permission for creating a smart contract and writing transactions as a smart contract input. This allows more control over the logic that runs on the blockchain that has been defined in the contract with the customer. Bibliography of selected references RFC-1035 Authors: Mirko Mollik , Andrei Ionita Status: work in progress Last modified: 2021-04-15","title":"Ledger Write Permissions"},{"location":"framework/10-protocol/RFC-1035/#ledger-write-permissions","text":"","title":"Ledger write permissions"},{"location":"framework/10-protocol/RFC-1035/#abstract","text":"This section provides an outline of the spectrum of writing access rights for parties on the distributed ledger.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1035/#motivation","text":"Write permissions allow to limit the access to the network operation and limit potential security risks.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1035/#elaboration","text":"The spectrum of writing permissions is composed of various levels: Writing a transaction and writing a block are two types of write permissions. Writing a transaction involves sending information to the network, which may go through a validation process, before it is added to a block in the ledger. The task of validating of a transaction may be included to the set of writing permissions. Any participating member that is not an authority member of the network may write transactions. Writing a block is the task of authority nodes. A write permission can be given for a specific type of transaction if it is supported by the ledger. Transfer transactions and smart contract transactions have different permission types. At one extreme, the amount of write permission can get in conflict with the decentralisation aspect. If only one party has write permission, the data are decentralized, but only one party controls what will be persisted.","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1035/#references-to-best-practices-examples","text":"The Hyperledger Indy and the TrustChain blockchains define a bag of rules that can be attached to each participant. Since everyone has access to the source code to run a different type of client (a validator node, an endorser), the writing permission is bound to the identity. The validators that are responsible for the block creation process can validate the transactions and refuse them, if the author of the transaction has not the privilege to create this kind of transaction. In the context of an ethereum blockchain you can differentiate between writing permission for creating a smart contract and writing transactions as a smart contract input. This allows more control over the logic that runs on the blockchain that has been defined in the contract with the customer.","title":"References to best practices, examples"},{"location":"framework/10-protocol/RFC-1035/#bibliography-of-selected-references","text":"RFC-1035 Authors: Mirko Mollik , Andrei Ionita Status: work in progress Last modified: 2021-04-15","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1036/","text":"Ledger read permissions Abstract This document outlines the spectrum of read access rights for parties on the ledger. Motivation Read permissions allow members to retrieve current data from the blockchain network. Elaboration Read access to the information on the ledger may differ for network members and non-members. Network members have generally a wide range of read access rights, as these members are involved in writing to the ledger. Non-member parties may be able to have some read access rights in case of public networks. Read permissions fall into two categories: technology-based and application-based. The underlying technology may contain mechanisms to restrict access to certain pieces of information. Applications can define reading rights based on the membership type. Smart contracts may restrict reading rights to specific members. Internal references and dependencies Lists of internal references and dependencies References to best practice, examples Ethereum In Ethereum-based blockchain technologies there is no way to limit the read access of nodes, e.g. to block and transaction information. The application level restrictions are controlled by smart contract code. Sovrin Ledger Access Policies Sovrin restricts read rights for tombstones [1]. Sovrin is planning a mechanism to tag data so that it can no longer be accessed. This mechanism will be declared as a tombstone. Bibliography of selected references [1] Sovrin Ledger Access Policies V2 RFC-1036 Contributing authors: Andrei Ionita, David Maas Status of this document: work in progress Last day modified: 2021-04-13","title":"Ledger Read Permissions"},{"location":"framework/10-protocol/RFC-1036/#ledger-read-permissions","text":"","title":"Ledger read permissions"},{"location":"framework/10-protocol/RFC-1036/#abstract","text":"This document outlines the spectrum of read access rights for parties on the ledger.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1036/#motivation","text":"Read permissions allow members to retrieve current data from the blockchain network.","title":"Motivation"},{"location":"framework/10-protocol/RFC-1036/#elaboration","text":"Read access to the information on the ledger may differ for network members and non-members. Network members have generally a wide range of read access rights, as these members are involved in writing to the ledger. Non-member parties may be able to have some read access rights in case of public networks. Read permissions fall into two categories: technology-based and application-based. The underlying technology may contain mechanisms to restrict access to certain pieces of information. Applications can define reading rights based on the membership type. Smart contracts may restrict reading rights to specific members.","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1036/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/10-protocol/RFC-1036/#references-to-best-practice-examples","text":"","title":"References to best practice, examples"},{"location":"framework/10-protocol/RFC-1036/#ethereum","text":"In Ethereum-based blockchain technologies there is no way to limit the read access of nodes, e.g. to block and transaction information. The application level restrictions are controlled by smart contract code.","title":"Ethereum"},{"location":"framework/10-protocol/RFC-1036/#sovrin-ledger-access-policies","text":"Sovrin restricts read rights for tombstones [1]. Sovrin is planning a mechanism to tag data so that it can no longer be accessed. This mechanism will be declared as a tombstone.","title":"Sovrin Ledger Access Policies"},{"location":"framework/10-protocol/RFC-1036/#bibliography-of-selected-references","text":"[1] Sovrin Ledger Access Policies V2 RFC-1036 Contributing authors: Andrei Ionita, David Maas Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1037/","text":"Updates Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-1037 Contributing authors: Status of this document: work in progress Last day modified:","title":"Updates"},{"location":"framework/10-protocol/RFC-1037/#updates","text":"","title":"Updates"},{"location":"framework/10-protocol/RFC-1037/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/10-protocol/RFC-1037/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/10-protocol/RFC-1037/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1037/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/10-protocol/RFC-1037/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/10-protocol/RFC-1037/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-1037 Contributing authors: Status of this document: work in progress Last day modified:","title":"Bibliography of selected references"},{"location":"framework/10-protocol/RFC-1061/","text":"Scalability Abstract This section describes semantic and technical interoperability with other networks. Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-1061 Contributing authors: Status of this document: work in progress Last day modified:","title":"Scalability"},{"location":"framework/10-protocol/RFC-1061/#scalability","text":"","title":"Scalability"},{"location":"framework/10-protocol/RFC-1061/#abstract","text":"This section describes semantic and technical interoperability with other networks.","title":"Abstract"},{"location":"framework/10-protocol/RFC-1061/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/10-protocol/RFC-1061/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/10-protocol/RFC-1061/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/10-protocol/RFC-1061/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/10-protocol/RFC-1061/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-1061 Contributing authors: Status of this document: work in progress Last day modified:","title":"Bibliography of selected references"},{"location":"framework/10-protocol/nodes/","text":"RFC-1031 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/10-protocol/nodes/#rfc-1031-title","text":"","title":"RFC-1031 \u2013 Title"},{"location":"framework/10-protocol/nodes/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/10-protocol/nodes/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/10-protocol/nodes/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/10-protocol/nodes/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/10-protocol/nodes/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/10-protocol/nodes/#bibliography-of-selected-references","text":"List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/10-protocol/permissions/","text":"Permissions Abstract Description of the range of acess rights to the ledger data, both reading and writing. Motivation Reading and writing access rights enable the retrieval and storing of data on the ledger. Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Andrei Ionita Status of this document: work in progress Last day modified: 2021-04-21","title":"Introduction"},{"location":"framework/10-protocol/permissions/#permissions","text":"","title":"Permissions"},{"location":"framework/10-protocol/permissions/#abstract","text":"Description of the range of acess rights to the ledger data, both reading and writing.","title":"Abstract"},{"location":"framework/10-protocol/permissions/#motivation","text":"Reading and writing access rights enable the retrieval and storing of data on the ledger.","title":"Motivation"},{"location":"framework/10-protocol/permissions/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/10-protocol/permissions/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/10-protocol/permissions/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/10-protocol/permissions/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Andrei Ionita Status of this document: work in progress Last day modified: 2021-04-21","title":"Bibliography of selected references"},{"location":"framework/2-applications/Applications/","text":"Applications Introduction Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/2-applications/Applications/#applications-introduction","text":"","title":"Applications Introduction"},{"location":"framework/2-applications/Applications/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/2-applications/Applications/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/2-applications/Applications/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/2-applications/Applications/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/2-applications/Applications/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/2-applications/Applications/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/2-applications/RFC-0211/","text":"App Developers Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0211 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Use Cases"},{"location":"framework/2-applications/RFC-0211/#app-developers","text":"","title":"App Developers"},{"location":"framework/2-applications/RFC-0211/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/2-applications/RFC-0211/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/2-applications/RFC-0211/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/2-applications/RFC-0211/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/2-applications/RFC-0211/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/2-applications/RFC-0211/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0211 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/2-applications/RFC-0221/","text":"RFC-0221 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"App developers"},{"location":"framework/2-applications/RFC-0221/#rfc-0221-title","text":"","title":"RFC-0221 \u2013 Title"},{"location":"framework/2-applications/RFC-0221/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/2-applications/RFC-0221/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/2-applications/RFC-0221/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/2-applications/RFC-0221/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/2-applications/RFC-0221/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/2-applications/RFC-0221/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/2-applications/RFC-0231/","text":"RFC-0231 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Business models"},{"location":"framework/2-applications/RFC-0231/#rfc-0231-title","text":"","title":"RFC-0231 \u2013 Title"},{"location":"framework/2-applications/RFC-0231/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/2-applications/RFC-0231/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/2-applications/RFC-0231/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/2-applications/RFC-0231/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/2-applications/RFC-0231/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/2-applications/RFC-0231/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/2-applications/RFC-0241/","text":"RFC-0241 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Users"},{"location":"framework/2-applications/RFC-0241/#rfc-0241-title","text":"","title":"RFC-0241 \u2013 Title"},{"location":"framework/2-applications/RFC-0241/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/2-applications/RFC-0241/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/2-applications/RFC-0241/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/2-applications/RFC-0241/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/2-applications/RFC-0241/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/2-applications/RFC-0241/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/3-regulation/RFC-0311/","text":"Antitrust Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0311 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Antitrust"},{"location":"framework/3-regulation/RFC-0311/#antitrust","text":"","title":"Antitrust"},{"location":"framework/3-regulation/RFC-0311/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/3-regulation/RFC-0311/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/3-regulation/RFC-0311/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/3-regulation/RFC-0311/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/3-regulation/RFC-0311/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/3-regulation/RFC-0311/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0311 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/3-regulation/RFC-0321/","text":"AML and KYC Abstract This section describes the need for anti money-laundering (AML) and know your customer (KYC) procedures. Moreover, examples are given and explained on how to utilize these procedures for a blockchain network. Motivation KYC and AML are legitimacy checks that are used depending on the purpose of the blockchain network. KYC mechanisms are used to create compliance with laws. Accordingly, the users of the network are to be identified in order to either simply prevent bots or spam or even clearly establish that it is a genuine identity. With a corresponding identity determination, money laundering can also be prevented, for example, when a cryptocurrency is used in the network. Elaboration The KYC process used may vary depending on the confidence level of the identification. At a low-threshold level, for example, social media accounts [1] are sufficient for abuse prevention in the network. For other applications, especially identity-based applications such as a self-sovereign identity network, processes are required that can establish identities on the basis of ID cards or other official documents (with the help of the issuer). When using a currency in the network, identification as well as logging of transactions is required for applicable money laundering laws. Internal references and dependencies Dependent on: Organisation - Goals, Accountability References to best practice, examples List of references to best practice, examples [1] Rinkeby: Authenticated Faucet https://faucet.rinkeby.io/ Bibliography of selected references ( List of references and literature ) RFC-0321 Contributing authors: Daniel Theis Status of this document: work in progress Last day modified: 2021-05-04","title":"AML and KYC"},{"location":"framework/3-regulation/RFC-0321/#aml-and-kyc","text":"","title":"AML and KYC"},{"location":"framework/3-regulation/RFC-0321/#abstract","text":"This section describes the need for anti money-laundering (AML) and know your customer (KYC) procedures. Moreover, examples are given and explained on how to utilize these procedures for a blockchain network.","title":"Abstract"},{"location":"framework/3-regulation/RFC-0321/#motivation","text":"KYC and AML are legitimacy checks that are used depending on the purpose of the blockchain network. KYC mechanisms are used to create compliance with laws. Accordingly, the users of the network are to be identified in order to either simply prevent bots or spam or even clearly establish that it is a genuine identity. With a corresponding identity determination, money laundering can also be prevented, for example, when a cryptocurrency is used in the network.","title":"Motivation"},{"location":"framework/3-regulation/RFC-0321/#elaboration","text":"The KYC process used may vary depending on the confidence level of the identification. At a low-threshold level, for example, social media accounts [1] are sufficient for abuse prevention in the network. For other applications, especially identity-based applications such as a self-sovereign identity network, processes are required that can establish identities on the basis of ID cards or other official documents (with the help of the issuer). When using a currency in the network, identification as well as logging of transactions is required for applicable money laundering laws.","title":"Elaboration"},{"location":"framework/3-regulation/RFC-0321/#internal-references-and-dependencies","text":"Dependent on: Organisation - Goals, Accountability","title":"Internal references and dependencies"},{"location":"framework/3-regulation/RFC-0321/#references-to-best-practice-examples","text":"List of references to best practice, examples [1] Rinkeby: Authenticated Faucet https://faucet.rinkeby.io/","title":"References to best practice, examples"},{"location":"framework/3-regulation/RFC-0321/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0321 Contributing authors: Daniel Theis Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/3-regulation/RFC-0331/","text":"Privacy (GDPR) Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0331 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Privacy (GDPR)"},{"location":"framework/3-regulation/RFC-0331/#privacy-gdpr","text":"","title":"Privacy (GDPR)"},{"location":"framework/3-regulation/RFC-0331/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/3-regulation/RFC-0331/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/3-regulation/RFC-0331/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/3-regulation/RFC-0331/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/3-regulation/RFC-0331/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/3-regulation/RFC-0331/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0331 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/3-regulation/RFC-0341/","text":"Copyright (DMS) Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0341 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Copyright (DMS)"},{"location":"framework/3-regulation/RFC-0341/#copyright-dms","text":"","title":"Copyright (DMS)"},{"location":"framework/3-regulation/RFC-0341/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/3-regulation/RFC-0341/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/3-regulation/RFC-0341/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/3-regulation/RFC-0341/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/3-regulation/RFC-0341/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/3-regulation/RFC-0341/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0341 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/3-regulation/RFC-0351/","text":"Services (DSA) Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0351 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Services (DSA)"},{"location":"framework/3-regulation/RFC-0351/#services-dsa","text":"","title":"Services (DSA)"},{"location":"framework/3-regulation/RFC-0351/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/3-regulation/RFC-0351/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/3-regulation/RFC-0351/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/3-regulation/RFC-0351/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/3-regulation/RFC-0351/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/3-regulation/RFC-0351/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0351 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/3-regulation/RFC-0361/","text":"Cryptocurrencies Abstract ( 1-2 sentences ) Motivation Cryptocurrencies, Tokens (NFT, ICO, STO) ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Direct dependancy: RFC-0321: AML and KYC References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0361 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Cryptocurrencies"},{"location":"framework/3-regulation/RFC-0361/#cryptocurrencies","text":"","title":"Cryptocurrencies"},{"location":"framework/3-regulation/RFC-0361/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/3-regulation/RFC-0361/#motivation","text":"Cryptocurrencies, Tokens (NFT, ICO, STO) ( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/3-regulation/RFC-0361/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/3-regulation/RFC-0361/#internal-references-and-dependencies","text":"Direct dependancy: RFC-0321: AML and KYC","title":"Internal references and dependencies"},{"location":"framework/3-regulation/RFC-0361/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/3-regulation/RFC-0361/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0361 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/3-regulation/Regulation/","text":"Regulation Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/3-regulation/Regulation/#regulation","text":"","title":"Regulation"},{"location":"framework/3-regulation/Regulation/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/3-regulation/Regulation/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/3-regulation/Regulation/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/3-regulation/Regulation/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/3-regulation/Regulation/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/3-regulation/Regulation/#bibliography-of-selected-references","text":"List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/4-membership/Membership/","text":"Membership Abstract Rules for membership and the different roles. Motivation Membership confers a higher level of responsibility. In principle, anyone can access the blockchain, but special rights are assigned through membership and the various roles. This makes it possible to obtain certain access rights or to participate in a decision. This creates trust in particular because the members are known and can be held accountable for their behaviour. In addition, access can be restricted or exclusion can be initiated in the event of a breach of duties or violations of regulations. Furthermore, it is also important that members can leave at their own request and that the process as a whole is fully regulated. Only in this way can restrictions be implemented. Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature Contributing authors: David Maas Status of this document: work in progress Last day modified: 2021-05-04","title":"Introduction"},{"location":"framework/4-membership/Membership/#membership","text":"","title":"Membership"},{"location":"framework/4-membership/Membership/#abstract","text":"Rules for membership and the different roles.","title":"Abstract"},{"location":"framework/4-membership/Membership/#motivation","text":"Membership confers a higher level of responsibility. In principle, anyone can access the blockchain, but special rights are assigned through membership and the various roles. This makes it possible to obtain certain access rights or to participate in a decision. This creates trust in particular because the members are known and can be held accountable for their behaviour. In addition, access can be restricted or exclusion can be initiated in the event of a breach of duties or violations of regulations. Furthermore, it is also important that members can leave at their own request and that the process as a whole is fully regulated. Only in this way can restrictions be implemented.","title":"Motivation"},{"location":"framework/4-membership/Membership/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/4-membership/Membership/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/4-membership/Membership/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/4-membership/Membership/#bibliography-of-selected-references","text":"List of references and literature Contributing authors: David Maas Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/4-membership/RFC-0411/","text":"Eligibility Abstract The section provides the guidelines to develop objective criteria for eligibility of members to join a consortial blockchain network. Motivation Clearly defined criteria for eligibility of members will increase security, as well as transparency within the community and parties that can participate in the blockchain network. Moreover, they can increase trust within the network, especially in the beginning, when a decentralized network is more prone to security risks since a malicious member can have a potentially higher impact. Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples Sovrin Sovrin regulates member requirements in its Sovrin Business Policy V2 Policy as follows: Who can become a member? * A Steward MUST be either: * A governmental Organization in a recognized Jurisdiction, or * An Organization registered to conduct business in at least one Jurisdiction. Which Jurisdiction does the member have to be compliant with? * A Steward MUST comply with the laws and regulations of the Jurisdiction(s) of which the Steward is part or in which the Steward is legally licensed to operate or registered to conduct business. What are the requirements for organizations/companies to join? A Steward MUST belong to one of the following categories: A governmental body or agency, or an entity predominantly owned and controlledby the state, in a Jurisdiction as defined in the Sovrin Glossary. One of the following types of governmentally regulated institutions with at least five (5) years operating history: Financial institution Healthcare provider Insurance company A law firm, accounting firm, or other legally-regulated institution with at least five(5) years operating history. A non-governmental organization (NGO) or Social Purpose Organization with atleast five (5) years operating history. An accredited university or other institution of higher education with at least five(5) years operating history. A certificate authority (CA) with at least five (5) years operating history. bloxberg Bloxberg defines Institution requirements in its Bloxberg Whitepaper v1.1 as follows: An Institution can apply as a bloxberg consortium member, if it is a \u2018Science organization, specifically academic, higher education and primarily publically funded research institutions. Sovrin suggests additional requirements if the member doesn't meet the set requirements in its Sovrin Business Policy V2 Policy as follows: Can someone join who doesn't meet the requirements? An Organization that does not qualify under one of the above categories butmeets all of the following conditions: Submits an application with written evidence satisfactory to the Sovrin Foundation that it meets all the other requirements in this section and is fully capable of complying with all the requirements of Sovrin GovernanceFramework. Includes in its application a written statement explaining why it supportsthe mission of the Sovrin Foundation and why it should be selected by the Sovrin Board of Trustees as a Steward. Agrees, contingent on its approval as a Steward, to publish and maintainthat written statement as a public document linkable on the Web. Receives approval to be a Steward from the Sovrin Board of Trustees. Bloxberg regulates reapplication requirements in its Bloxberg Whitepaper v1.1 as follows: The excluded organization can reapply for a bloxberg consortium membership Sovrin regulates additional and special requirements in its Sovrin Business Policy V2 Policy as follows: What may be further requirements? A Steward MUST attest and provide supporting evidence to the Sovrin Foundation in the application or requalification process that the Steward is: Financially solvent. Not undergoing any criminal proceedings. Special Requirements for members if they are suspended A Steward who is suspended MUST not have an active Node on any Sovrin Ledger network until such time as Steward is able to provide reasonable assurance to the responsible Sovrin Governing Body that: a.The Steward is back in compliance with all requirements of the SovrinGovernance Framework, and b.The Steward has the ability to maintain compliance for the foreseeable future. At the request of a suspended Steward, the responsible Sovrin Governing Body MUST examine the Steward\u2019s remediation efforts and make one of the following decisions: a.Reactivate the Steward. b.Request further remediation by the Steward. c.Terminate the Steward Special Requirements for members if they are terminated An Organization who has been previously terminated as a Steward and who applies to be reinstated MUST disclose the previous termination in their application and explain theremediation steps that the Steward has taken to requalify. Bibliography of selected references Sovrin Business Policy V2 Policy Bloxberg Whitepaper v1.1 RFC-0411 Contributing authors: Tina Marquardt , Chinmay Khandekar Status of this document: work in progress Last day modified: 2021-05-04","title":"Eligibility"},{"location":"framework/4-membership/RFC-0411/#eligibility","text":"","title":"Eligibility"},{"location":"framework/4-membership/RFC-0411/#abstract","text":"The section provides the guidelines to develop objective criteria for eligibility of members to join a consortial blockchain network.","title":"Abstract"},{"location":"framework/4-membership/RFC-0411/#motivation","text":"Clearly defined criteria for eligibility of members will increase security, as well as transparency within the community and parties that can participate in the blockchain network. Moreover, they can increase trust within the network, especially in the beginning, when a decentralized network is more prone to security risks since a malicious member can have a potentially higher impact.","title":"Motivation"},{"location":"framework/4-membership/RFC-0411/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/4-membership/RFC-0411/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/4-membership/RFC-0411/#references-to-best-practice-examples","text":"","title":"References to best practice, examples"},{"location":"framework/4-membership/RFC-0411/#sovrin","text":"Sovrin regulates member requirements in its Sovrin Business Policy V2 Policy as follows: Who can become a member? * A Steward MUST be either: * A governmental Organization in a recognized Jurisdiction, or * An Organization registered to conduct business in at least one Jurisdiction. Which Jurisdiction does the member have to be compliant with? * A Steward MUST comply with the laws and regulations of the Jurisdiction(s) of which the Steward is part or in which the Steward is legally licensed to operate or registered to conduct business.","title":"Sovrin"},{"location":"framework/4-membership/RFC-0411/#what-are-the-requirements-for-organizationscompanies-to-join","text":"A Steward MUST belong to one of the following categories: A governmental body or agency, or an entity predominantly owned and controlledby the state, in a Jurisdiction as defined in the Sovrin Glossary. One of the following types of governmentally regulated institutions with at least five (5) years operating history: Financial institution Healthcare provider Insurance company A law firm, accounting firm, or other legally-regulated institution with at least five(5) years operating history. A non-governmental organization (NGO) or Social Purpose Organization with atleast five (5) years operating history. An accredited university or other institution of higher education with at least five(5) years operating history. A certificate authority (CA) with at least five (5) years operating history.","title":"What are the requirements for organizations/companies to join?"},{"location":"framework/4-membership/RFC-0411/#bloxberg","text":"Bloxberg defines Institution requirements in its Bloxberg Whitepaper v1.1 as follows: An Institution can apply as a bloxberg consortium member, if it is a \u2018Science organization, specifically academic, higher education and primarily publically funded research institutions. Sovrin suggests additional requirements if the member doesn't meet the set requirements in its Sovrin Business Policy V2 Policy as follows:","title":"bloxberg"},{"location":"framework/4-membership/RFC-0411/#can-someone-join-who-doesnt-meet-the-requirements","text":"An Organization that does not qualify under one of the above categories butmeets all of the following conditions: Submits an application with written evidence satisfactory to the Sovrin Foundation that it meets all the other requirements in this section and is fully capable of complying with all the requirements of Sovrin GovernanceFramework. Includes in its application a written statement explaining why it supportsthe mission of the Sovrin Foundation and why it should be selected by the Sovrin Board of Trustees as a Steward. Agrees, contingent on its approval as a Steward, to publish and maintainthat written statement as a public document linkable on the Web. Receives approval to be a Steward from the Sovrin Board of Trustees. Bloxberg regulates reapplication requirements in its Bloxberg Whitepaper v1.1 as follows: The excluded organization can reapply for a bloxberg consortium membership Sovrin regulates additional and special requirements in its Sovrin Business Policy V2 Policy as follows:","title":"Can someone join who doesn't meet the requirements?"},{"location":"framework/4-membership/RFC-0411/#what-may-be-further-requirements","text":"A Steward MUST attest and provide supporting evidence to the Sovrin Foundation in the application or requalification process that the Steward is: Financially solvent. Not undergoing any criminal proceedings.","title":"What may be further requirements?"},{"location":"framework/4-membership/RFC-0411/#special-requirements-for-members-if-they-are-suspended","text":"A Steward who is suspended MUST not have an active Node on any Sovrin Ledger network until such time as Steward is able to provide reasonable assurance to the responsible Sovrin Governing Body that: a.The Steward is back in compliance with all requirements of the SovrinGovernance Framework, and b.The Steward has the ability to maintain compliance for the foreseeable future. At the request of a suspended Steward, the responsible Sovrin Governing Body MUST examine the Steward\u2019s remediation efforts and make one of the following decisions: a.Reactivate the Steward. b.Request further remediation by the Steward. c.Terminate the Steward","title":"Special Requirements for members if they are suspended"},{"location":"framework/4-membership/RFC-0411/#special-requirements-for-members-if-they-are-terminated","text":"An Organization who has been previously terminated as a Steward and who applies to be reinstated MUST disclose the previous termination in their application and explain theremediation steps that the Steward has taken to requalify.","title":"Special Requirements for members if they are terminated"},{"location":"framework/4-membership/RFC-0411/#bibliography-of-selected-references","text":"Sovrin Business Policy V2 Policy Bloxberg Whitepaper v1.1 RFC-0411 Contributing authors: Tina Marquardt , Chinmay Khandekar Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/4-membership/RFC-0421/","text":"Application process for new members Abstract This section provides a guidelines for an possible application process to select new members to join a consortial blockchain network. Motivation A transparent application process flow provides a clear and transparent overview to the applicant and members. It increases confidence that their application has been scrutinized well before a decision is made and that only eligible and trustworthy organizations are able to join. The process gives equal chances to all eligible applicants and creates more security within the exisiting consortia Elaboration ( max. +- 5.000 characters)* Internal references and dependencies (Lists of internal references and dependencies) References to best practice, examples Sovrin regulates applications process in its Sovrin Business Policy V2 Policy as follows: Application process for the organization when applying: The Sovrin Foundation Steward application and selection process MUST: Use the Core Principles of the Sovrin Governance Framework as a guide, with special attention to the Decentralization by Design principles. Be publicly documented on the Sovrin Foundation website. To apply, an Organization MUST submit a written application to the Sovrin Governing Body responsible for Steward applications as directed on the Sovrin Foundation website. The Steward application process MUST follow the guidelines for Self-Certification, Certification, or Accreditation as specified by the Sovrin Trust Assurance Framework. In evaluating and prioritizing Steward applications, the Sovrin Foundation MUST take into account: Public contributions of any kind, including but not limited to open source engineering resources, efforts to drive Sovrin adoption, participation in Sovrin governance, marketing efforts, and direct financial contributions, that the prospective Steward has made in the past to the Sovrin Foundation or the Sovrin Community. Public contributions of any kind the prospective Steward commits (in writing in its Steward application) to making to the Sovrin Foundation or the Sovrin Community. Any other specific Practices and Procedures involved in the Steward application process MUST be publicly documented on the Sovrin Foundation website. Bloxberg defines new member application workflow in its Bloxberg Whitepaper v1.1 as follows: Voting for new bloxberg consortium members. Workflow: Applicant fills out a form on the official (bloxberg.org) website The Iron Throne adds the applicant to the voting dApp Once every 4 weeks members vote for 4 weeks on new applicants The voting is executed on-chain after an off-chain discussion The voting is executed according to the bloxberg decision algorithm, refer to #0020 RFC for more information on decision-making in governance processes) The bloxberg consortium needs a quorum of >50% of all voting power, to execute a valid voting, but a minimum of 3 voting organizations. If > 50%of the valid votes are yes, the new member is accepted. If not, the new member is rejected and can reapply at a later time. After a positive vote the Iron Throne is instructed to add the new member as a authority node to the bloxberg network. ** The new member has to run one Authority node, but can have n non-Authority nodes. The Authority node must be available in the network all the time. Bibliography of selected references Sovrin Business Policy V2 Policy Bloxberg Whitepaper v1.1 RFC 0421 Contributing authors: Tina Marquardt , Chinmay Khandekar Status of this document: work in progress Last day modified: 2021-05-04","title":"Application process for new members"},{"location":"framework/4-membership/RFC-0421/#application-process-for-new-members","text":"","title":"Application process for new members"},{"location":"framework/4-membership/RFC-0421/#abstract","text":"This section provides a guidelines for an possible application process to select new members to join a consortial blockchain network.","title":"Abstract"},{"location":"framework/4-membership/RFC-0421/#motivation","text":"A transparent application process flow provides a clear and transparent overview to the applicant and members. It increases confidence that their application has been scrutinized well before a decision is made and that only eligible and trustworthy organizations are able to join. The process gives equal chances to all eligible applicants and creates more security within the exisiting consortia","title":"Motivation"},{"location":"framework/4-membership/RFC-0421/#elaboration","text":"( max. +- 5.000 characters)*","title":"Elaboration"},{"location":"framework/4-membership/RFC-0421/#internal-references-and-dependencies","text":"(Lists of internal references and dependencies)","title":"Internal references and dependencies"},{"location":"framework/4-membership/RFC-0421/#references-to-best-practice-examples","text":"Sovrin regulates applications process in its Sovrin Business Policy V2 Policy as follows:","title":"References to best practice, examples"},{"location":"framework/4-membership/RFC-0421/#application-process-for-the-organization-when-applying","text":"The Sovrin Foundation Steward application and selection process MUST: Use the Core Principles of the Sovrin Governance Framework as a guide, with special attention to the Decentralization by Design principles. Be publicly documented on the Sovrin Foundation website. To apply, an Organization MUST submit a written application to the Sovrin Governing Body responsible for Steward applications as directed on the Sovrin Foundation website. The Steward application process MUST follow the guidelines for Self-Certification, Certification, or Accreditation as specified by the Sovrin Trust Assurance Framework. In evaluating and prioritizing Steward applications, the Sovrin Foundation MUST take into account: Public contributions of any kind, including but not limited to open source engineering resources, efforts to drive Sovrin adoption, participation in Sovrin governance, marketing efforts, and direct financial contributions, that the prospective Steward has made in the past to the Sovrin Foundation or the Sovrin Community. Public contributions of any kind the prospective Steward commits (in writing in its Steward application) to making to the Sovrin Foundation or the Sovrin Community. Any other specific Practices and Procedures involved in the Steward application process MUST be publicly documented on the Sovrin Foundation website. Bloxberg defines new member application workflow in its Bloxberg Whitepaper v1.1 as follows: Voting for new bloxberg consortium members. Workflow: Applicant fills out a form on the official (bloxberg.org) website The Iron Throne adds the applicant to the voting dApp Once every 4 weeks members vote for 4 weeks on new applicants The voting is executed on-chain after an off-chain discussion The voting is executed according to the bloxberg decision algorithm, refer to #0020 RFC for more information on decision-making in governance processes) The bloxberg consortium needs a quorum of >50% of all voting power, to execute a valid voting, but a minimum of 3 voting organizations. If > 50%of the valid votes are yes, the new member is accepted. If not, the new member is rejected and can reapply at a later time. After a positive vote the Iron Throne is instructed to add the new member as a authority node to the bloxberg network. ** The new member has to run one Authority node, but can have n non-Authority nodes. The Authority node must be available in the network all the time.","title":"Application process for the organization when applying:"},{"location":"framework/4-membership/RFC-0421/#bibliography-of-selected-references","text":"Sovrin Business Policy V2 Policy Bloxberg Whitepaper v1.1 RFC 0421 Contributing authors: Tina Marquardt , Chinmay Khandekar Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/4-membership/RFC-0431/","text":"Onboarding Abstract This section describes the onboarding or admission process of new members taking into account the required criteria. Motivation If all requirements are met, the admission process can be carried out after a decision by the consortium. In this process, permissions are granted and access to the project infrastructure is given. This process should be standardised. This depends on the level of authorisation that has been granted. The transfer of information and responsibilities must of course also be communicated. In the process, the own infrastructure is also integrated into the blockchain. This ensures that there are no problems with the inclusion and that the network can be expanded without any problems. Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0431 Contributing authors: David Maas Status of this document: work in progress Last day modified: 2021-05-04","title":"Onboarding"},{"location":"framework/4-membership/RFC-0431/#onboarding","text":"","title":"Onboarding"},{"location":"framework/4-membership/RFC-0431/#abstract","text":"This section describes the onboarding or admission process of new members taking into account the required criteria.","title":"Abstract"},{"location":"framework/4-membership/RFC-0431/#motivation","text":"If all requirements are met, the admission process can be carried out after a decision by the consortium. In this process, permissions are granted and access to the project infrastructure is given. This process should be standardised. This depends on the level of authorisation that has been granted. The transfer of information and responsibilities must of course also be communicated. In the process, the own infrastructure is also integrated into the blockchain. This ensures that there are no problems with the inclusion and that the network can be expanded without any problems.","title":"Motivation"},{"location":"framework/4-membership/RFC-0431/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/4-membership/RFC-0431/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/4-membership/RFC-0431/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/4-membership/RFC-0431/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0431 Contributing authors: David Maas Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/4-membership/RFC-0441/","text":"Offboarding Abstract This section describes the exclusion or offboarding process of members taking into account the required criteria. Motivation In the event of misconduct or other reasons for the expulsion of a member, this must be decided by a majority. It must be decided whether the member is suspended for a certain period of time or directly expelled. In this process, privileges must either be suspended for a period of time or withdrawn completely. This means that the member can no longer participate in the decision-making process and, in the case of an exclusion, can no longer access the project infrastructure. This is the only way to ensure that the restrictions take effect and that the infrastructure of the excluded member is no longer integrated into the infrastructure of the blockchain. This ensures that no problems can occur on the network. Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature RFC-0441 Contributing authors: David Maas Status of this document: work in progress Last day modified: 2021-05-04","title":"Offboarding"},{"location":"framework/4-membership/RFC-0441/#offboarding","text":"","title":"Offboarding"},{"location":"framework/4-membership/RFC-0441/#abstract","text":"This section describes the exclusion or offboarding process of members taking into account the required criteria.","title":"Abstract"},{"location":"framework/4-membership/RFC-0441/#motivation","text":"In the event of misconduct or other reasons for the expulsion of a member, this must be decided by a majority. It must be decided whether the member is suspended for a certain period of time or directly expelled. In this process, privileges must either be suspended for a period of time or withdrawn completely. This means that the member can no longer participate in the decision-making process and, in the case of an exclusion, can no longer access the project infrastructure. This is the only way to ensure that the restrictions take effect and that the infrastructure of the excluded member is no longer integrated into the infrastructure of the blockchain. This ensures that no problems can occur on the network.","title":"Motivation"},{"location":"framework/4-membership/RFC-0441/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/4-membership/RFC-0441/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/4-membership/RFC-0441/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/4-membership/RFC-0441/#bibliography-of-selected-references","text":"List of references and literature RFC-0441 Contributing authors: David Maas Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/4-membership/RFC-0451/","text":"Amicable member exit Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature RFC-0451 Contributing authors: Status of this document: work in progress Last day modified: 2021-05-04","title":"Amicable member exit"},{"location":"framework/4-membership/RFC-0451/#amicable-member-exit","text":"","title":"Amicable member exit"},{"location":"framework/4-membership/RFC-0451/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/4-membership/RFC-0451/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/4-membership/RFC-0451/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/4-membership/RFC-0451/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/4-membership/RFC-0451/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/4-membership/RFC-0451/#bibliography-of-selected-references","text":"List of references and literature RFC-0451 Contributing authors: Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/4-membership/RFC-0461/","text":"Member Roles Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature RFC-0461 Contributing authors: Status of this document: work in progress Last day modified: 2021-05-04","title":"Member Roles"},{"location":"framework/4-membership/RFC-0461/#member-roles","text":"","title":"Member Roles"},{"location":"framework/4-membership/RFC-0461/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/4-membership/RFC-0461/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/4-membership/RFC-0461/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/4-membership/RFC-0461/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/4-membership/RFC-0461/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/4-membership/RFC-0461/#bibliography-of-selected-references","text":"List of references and literature RFC-0461 Contributing authors: Status of this document: work in progress Last day modified: 2021-05-04","title":"Bibliography of selected references"},{"location":"framework/5-ecosystem/Ecosystem/","text":"Ecosystem Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/5-ecosystem/Ecosystem/#ecosystem","text":"","title":"Ecosystem"},{"location":"framework/5-ecosystem/Ecosystem/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/5-ecosystem/Ecosystem/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/5-ecosystem/Ecosystem/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/5-ecosystem/Ecosystem/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/5-ecosystem/Ecosystem/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/5-ecosystem/Ecosystem/#bibliography-of-selected-references","text":"List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/5-ecosystem/RFC-0511/","text":"RFC-0511 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"SDK"},{"location":"framework/5-ecosystem/RFC-0511/#rfc-0511-title","text":"","title":"RFC-0511 \u2013 Title"},{"location":"framework/5-ecosystem/RFC-0511/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/5-ecosystem/RFC-0511/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/5-ecosystem/RFC-0511/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/5-ecosystem/RFC-0511/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/5-ecosystem/RFC-0511/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/5-ecosystem/RFC-0511/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/5-ecosystem/RFC-0521/","text":"RFC-0521 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Documentations"},{"location":"framework/5-ecosystem/RFC-0521/#rfc-0521-title","text":"","title":"RFC-0521 \u2013 Title"},{"location":"framework/5-ecosystem/RFC-0521/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/5-ecosystem/RFC-0521/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/5-ecosystem/RFC-0521/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/5-ecosystem/RFC-0521/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/5-ecosystem/RFC-0521/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/5-ecosystem/RFC-0521/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/6-collaboration/Collaboration/","text":"Collaboration Abstract The topic of collaboration focuses on the communication policies as well as on the means of communication among the consortium members. Motivation At a very early stage, the consortium members should agree on the means of communication and the way they prefer to organize the work and the decision processes. Well-defined processes for collaboration, communication, decision-making, conflict and knowledge sharing are essential for the efficient and smooth operation of the network. The process of setting up the consortial communication infrastructure should start with the definition and an overview of possible tools and services that could be used for the different purposes. Also, the members need to agree on communication policies for the various communication channels. Elaboration The following sections will focus on the topics of: Communication policy Platforms and purposes for consortial communication Decision-making Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Sebastian Posth , David Maas Status of this document: work in progress Last day modified: 2021-05-05","title":"Introduction"},{"location":"framework/6-collaboration/Collaboration/#collaboration","text":"","title":"Collaboration"},{"location":"framework/6-collaboration/Collaboration/#abstract","text":"The topic of collaboration focuses on the communication policies as well as on the means of communication among the consortium members.","title":"Abstract"},{"location":"framework/6-collaboration/Collaboration/#motivation","text":"At a very early stage, the consortium members should agree on the means of communication and the way they prefer to organize the work and the decision processes. Well-defined processes for collaboration, communication, decision-making, conflict and knowledge sharing are essential for the efficient and smooth operation of the network. The process of setting up the consortial communication infrastructure should start with the definition and an overview of possible tools and services that could be used for the different purposes. Also, the members need to agree on communication policies for the various communication channels.","title":"Motivation"},{"location":"framework/6-collaboration/Collaboration/#elaboration","text":"The following sections will focus on the topics of: Communication policy Platforms and purposes for consortial communication Decision-making","title":"Elaboration"},{"location":"framework/6-collaboration/Collaboration/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/6-collaboration/Collaboration/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/6-collaboration/Collaboration/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Sebastian Posth , David Maas Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/6-collaboration/RFC-0611/","text":"Communication Policy Abstract This section focuses on the communication policies that define the choice of tools and services for communication, the best practice for good and efficient communication as well as the code of conduct. Motivation The consortial communications should be based on established practices for good and efficient communication and established standards for conduct. Also, the choice of the tools for communication should be guided by a number of principles, such as inclusiveness, efficiency and standardization. Elaboration Choice of communication tools The choice of the tools of communication should be guided by a number of principles, that allow all members to participate in the collaboration of the consortium in the most inclusive, efficient and standardized way: Inclusion All members need to be able to use all selected tools of communications. For this reason they need to be: - accessible - affordable (free of costs) - open in such a way that they provide no barriers of entry Efficiency All members need to be informed quickly and without efforts to support a good and frictionless collaboration among the members. Standards Members should use tools that are established and broadly used as this increases the chance that many users might already be familiar with the tools and that the tools are well documented. The consortium needs to discuss whether some tools of communication might not be compatible with the corporate communication policies of participating members, privacy or data protection regulations and/or other local regulation. Best practice for good and efficient communication For a good and efficient communication among the members and users, the following principles should be respected: Documentation All communication should be documented professionally and comprehensively, including all relevant details and metadata like e.g. a date of the communication, the involved communication partners. Communication should be documented professionally and comprehensively and transparent in such a way, so that all absent members or new members can informed themselves quickly and efficiently about the communication and matter at stake. All relevant communication should be distributed to all members. All members should be notified, this means that the consortium should establish a way to provide information on updates and communication to all members swiftly. All members should make sure that relevant communication can \u2013 in principle \u2013 can be accessed by all employees of the organization. Rules on debriefing of staff within one organization and internal communication may apply. The members should consequently avoid the that communication and knowledge is dependent on one user (\u201cbus driver problem\u201d) and implement substitute regulations at all times. Transparency Transparency in documentation and decision processes can create mutual trust among the members of the consortium as well as external parties. Reliability Members should be aware of relevant communication and responsive when they are addressed. This means that members should respond in a timely and competent manner. Code of Conduct All members should agree on a code of conduct in their communication that include policies for fair and equal treatment of all members and that allow to resolve potential conflicts efficiently and effectively. The general principles are: - Respect - Ethical behaviour - Principles of efficient dispute resolution - Purpose on focus and scope of the consortium An escalation process needs to be established. This could result in a voting decision about the topic in dispute or the conflict between the members or users. Point of contacts Points of contact for consortial members The consortium should provide relevant information about the consortium and its members, including the information about the roles within the consortium and their contact information. This way, the relevant contacts can be found, e.g. in cases of technical problems with the chain, the need for escalation in case of an emergency, to reach out to expert and decision-making bodies, working admins. Points of contact for external contacts The consortium should provide relevant information about the consortium and its members, and offer a way for interested third parties to get in touch with the consortium, individual members or individual points of contact. It should be clear to interested third parties, who is the responsible contact person for external questions? Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature RFC-0611 Contributing authors: Sebastian Posth , David Maas Status of this document: work in progress Last day modified: 2021-05-05","title":"Communication Policy"},{"location":"framework/6-collaboration/RFC-0611/#communication-policy","text":"","title":"Communication Policy"},{"location":"framework/6-collaboration/RFC-0611/#abstract","text":"This section focuses on the communication policies that define the choice of tools and services for communication, the best practice for good and efficient communication as well as the code of conduct.","title":"Abstract"},{"location":"framework/6-collaboration/RFC-0611/#motivation","text":"The consortial communications should be based on established practices for good and efficient communication and established standards for conduct. Also, the choice of the tools for communication should be guided by a number of principles, such as inclusiveness, efficiency and standardization.","title":"Motivation"},{"location":"framework/6-collaboration/RFC-0611/#elaboration","text":"","title":"Elaboration"},{"location":"framework/6-collaboration/RFC-0611/#choice-of-communication-tools","text":"The choice of the tools of communication should be guided by a number of principles, that allow all members to participate in the collaboration of the consortium in the most inclusive, efficient and standardized way:","title":"Choice of communication tools"},{"location":"framework/6-collaboration/RFC-0611/#inclusion","text":"All members need to be able to use all selected tools of communications. For this reason they need to be: - accessible - affordable (free of costs) - open in such a way that they provide no barriers of entry","title":"Inclusion"},{"location":"framework/6-collaboration/RFC-0611/#efficiency","text":"All members need to be informed quickly and without efforts to support a good and frictionless collaboration among the members.","title":"Efficiency"},{"location":"framework/6-collaboration/RFC-0611/#standards","text":"Members should use tools that are established and broadly used as this increases the chance that many users might already be familiar with the tools and that the tools are well documented. The consortium needs to discuss whether some tools of communication might not be compatible with the corporate communication policies of participating members, privacy or data protection regulations and/or other local regulation.","title":"Standards"},{"location":"framework/6-collaboration/RFC-0611/#best-practice-for-good-and-efficient-communication","text":"For a good and efficient communication among the members and users, the following principles should be respected:","title":"Best practice for good and efficient communication"},{"location":"framework/6-collaboration/RFC-0611/#documentation","text":"All communication should be documented professionally and comprehensively, including all relevant details and metadata like e.g. a date of the communication, the involved communication partners. Communication should be documented professionally and comprehensively and transparent in such a way, so that all absent members or new members can informed themselves quickly and efficiently about the communication and matter at stake. All relevant communication should be distributed to all members. All members should be notified, this means that the consortium should establish a way to provide information on updates and communication to all members swiftly. All members should make sure that relevant communication can \u2013 in principle \u2013 can be accessed by all employees of the organization. Rules on debriefing of staff within one organization and internal communication may apply. The members should consequently avoid the that communication and knowledge is dependent on one user (\u201cbus driver problem\u201d) and implement substitute regulations at all times.","title":"Documentation"},{"location":"framework/6-collaboration/RFC-0611/#transparency","text":"Transparency in documentation and decision processes can create mutual trust among the members of the consortium as well as external parties.","title":"Transparency"},{"location":"framework/6-collaboration/RFC-0611/#reliability","text":"Members should be aware of relevant communication and responsive when they are addressed. This means that members should respond in a timely and competent manner.","title":"Reliability"},{"location":"framework/6-collaboration/RFC-0611/#code-of-conduct","text":"All members should agree on a code of conduct in their communication that include policies for fair and equal treatment of all members and that allow to resolve potential conflicts efficiently and effectively. The general principles are: - Respect - Ethical behaviour - Principles of efficient dispute resolution - Purpose on focus and scope of the consortium An escalation process needs to be established. This could result in a voting decision about the topic in dispute or the conflict between the members or users.","title":"Code of Conduct"},{"location":"framework/6-collaboration/RFC-0611/#point-of-contacts","text":"","title":"Point of contacts"},{"location":"framework/6-collaboration/RFC-0611/#points-of-contact-for-consortial-members","text":"The consortium should provide relevant information about the consortium and its members, including the information about the roles within the consortium and their contact information. This way, the relevant contacts can be found, e.g. in cases of technical problems with the chain, the need for escalation in case of an emergency, to reach out to expert and decision-making bodies, working admins.","title":"Points of contact for consortial members"},{"location":"framework/6-collaboration/RFC-0611/#points-of-contact-for-external-contacts","text":"The consortium should provide relevant information about the consortium and its members, and offer a way for interested third parties to get in touch with the consortium, individual members or individual points of contact. It should be clear to interested third parties, who is the responsible contact person for external questions?","title":"Points of contact for external contacts"},{"location":"framework/6-collaboration/RFC-0611/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/6-collaboration/RFC-0611/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/6-collaboration/RFC-0611/#bibliography-of-selected-references","text":"List of references and literature RFC-0611 Contributing authors: Sebastian Posth , David Maas Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/6-collaboration/RFC-0621/","text":"Consortial Communication Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration Internal Communication Different tools support different functionalities: Instant communication platforms Zoom, MS Teams, Signal, Telegram, Discord, Slack etc. Goals: Chat, quick and simple communication tool or video conferencing for regular meetings or consortial committees Collaboration platforms Slack, Discord, Basecamp, Jira, Trello Goals: primary collaboration platform, messages with organizing purposes, assignments of to-dos, minutes, ticketing Project management platforms Basecamp, Jira, Trello, etc. Goals: organization of collaboration Knowledge Base Confluence, GitHub, Google Docs Goals: document archive, asset management, knowledge base, wiki, documentation, minutes, technical information, member lists and their contact information Development platform Git, GitHub Goals: technical development of the protocol, improvement proposals, issues, code exchange, configuration files, source code, versioning system for documentation of technical implementations (set-up\u2019s, protocols, configuration files) External Communication Websites, blogs WordPress, Git Pages/mkdocs Goals: public communication platform, presentation of consortium and goals, marketing, primary information for interested parties Social media LinkedIn pages, Twitter, Discord Goals: public communication platform, marketing and promotion, interaction with potential consumers Press releases Goals: Official public announcements and press statements Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples Bloxberg Annual member conference Monthly member call Slack channels Working groups and meetings Member lists and their contact information Govdigital Signal chat as information channel Govdigital contact list GitLab work stream kanban board Confluence for concept documentations (collaboration tool) Weekly architecture strategic meetings Sovrin All Steward Call Steward Council Meeting Slack Bibliography of selected references ( List of references and literature ) RFC-0621 Contributing authors: Sebastian Posth , David Maas , Peter Niehues , Matthias Kammer , Zoltan Fazekas , Ingo Keck Status of this document: work in progress Last day modified: 2021-05-05","title":"Consortial Communication"},{"location":"framework/6-collaboration/RFC-0621/#consortial-communication","text":"","title":"Consortial Communication"},{"location":"framework/6-collaboration/RFC-0621/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/6-collaboration/RFC-0621/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/6-collaboration/RFC-0621/#elaboration","text":"","title":"Elaboration"},{"location":"framework/6-collaboration/RFC-0621/#internal-communication","text":"Different tools support different functionalities:","title":"Internal Communication"},{"location":"framework/6-collaboration/RFC-0621/#instant-communication-platforms","text":"Zoom, MS Teams, Signal, Telegram, Discord, Slack etc. Goals: Chat, quick and simple communication tool or video conferencing for regular meetings or consortial committees","title":"Instant communication platforms"},{"location":"framework/6-collaboration/RFC-0621/#collaboration-platforms","text":"Slack, Discord, Basecamp, Jira, Trello Goals: primary collaboration platform, messages with organizing purposes, assignments of to-dos, minutes, ticketing","title":"Collaboration platforms"},{"location":"framework/6-collaboration/RFC-0621/#project-management-platforms","text":"Basecamp, Jira, Trello, etc. Goals: organization of collaboration","title":"Project management platforms"},{"location":"framework/6-collaboration/RFC-0621/#knowledge-base","text":"Confluence, GitHub, Google Docs Goals: document archive, asset management, knowledge base, wiki, documentation, minutes, technical information, member lists and their contact information","title":"Knowledge Base"},{"location":"framework/6-collaboration/RFC-0621/#development-platform","text":"Git, GitHub Goals: technical development of the protocol, improvement proposals, issues, code exchange, configuration files, source code, versioning system for documentation of technical implementations (set-up\u2019s, protocols, configuration files)","title":"Development platform"},{"location":"framework/6-collaboration/RFC-0621/#external-communication","text":"","title":"External Communication"},{"location":"framework/6-collaboration/RFC-0621/#websites-blogs","text":"WordPress, Git Pages/mkdocs Goals: public communication platform, presentation of consortium and goals, marketing, primary information for interested parties","title":"Websites, blogs"},{"location":"framework/6-collaboration/RFC-0621/#social-media","text":"LinkedIn pages, Twitter, Discord Goals: public communication platform, marketing and promotion, interaction with potential consumers","title":"Social media"},{"location":"framework/6-collaboration/RFC-0621/#press-releases","text":"Goals: Official public announcements and press statements","title":"Press releases"},{"location":"framework/6-collaboration/RFC-0621/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/6-collaboration/RFC-0621/#references-to-best-practice-examples","text":"","title":"References to best practice, examples"},{"location":"framework/6-collaboration/RFC-0621/#bloxberg","text":"Annual member conference Monthly member call Slack channels Working groups and meetings Member lists and their contact information","title":"Bloxberg"},{"location":"framework/6-collaboration/RFC-0621/#govdigital","text":"Signal chat as information channel Govdigital contact list GitLab work stream kanban board Confluence for concept documentations (collaboration tool) Weekly architecture strategic meetings","title":"Govdigital"},{"location":"framework/6-collaboration/RFC-0621/#sovrin","text":"All Steward Call Steward Council Meeting Slack","title":"Sovrin"},{"location":"framework/6-collaboration/RFC-0621/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0621 Contributing authors: Sebastian Posth , David Maas , Peter Niehues , Matthias Kammer , Zoltan Fazekas , Ingo Keck Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/6-collaboration/RFC-0631/","text":"Decision-making (Onchain/offchain) Abstract This section is about processes of decision-making and votes off-chain and on-chain and the communication of the decisions made. Motivation It is of high relevance to define the systems of decision-making and establish processes that do not disadvantage others and are therefore fair and transparent to all members of the consortium and above. For different decisions it might be necessary to use different ways to generate consensus off-chain or on-chain and to define the quorum when a majority is reached, e.g. a qualified majority (when more than half of the votes are sufficient for a decision) or an absolute majority (when a higher majority is required). Rules and regulation for off-chain and on-chain voting, fallback solutions, dispute resolution, announcements of votes and their consequences need to be in place. Elaboration What kind of decisions might require off-chain or on-chain votes: Protocol related decisions Protocol updates Changes of permissions Consortial decisions Onboarding or offboarding of members Changes of consortial roles Off-chain voting The decision-making process off-chain needs to be described. On-chain voting The decision-making process on-chain needs to be described. Weightings It can be decided that votes are weighted. Fallback solution and dispute resolution What happens if the vote is not cast, and how long does this process actually take? Announcements Dates and deadlines Information about an upcoming vote must also be communicated in time and the decision-making process needs to be carried out due to all formal process of timely announcements, commenting phases etc. Only if all formalities have been clarified, the decision process can be carried out. Results The announcement of the decision taken needs to be communicated to all members and above in a timely manner. Consequences Furthermore, consequences of decisions and votes need to be respected. These decisions are usually executed by the third parties. In some cases, legal documents or contracts of the consortium need to be adapted. Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0631 Contributing authors: Sebastian Posth , David Maas Status of this document: work in progress Last day modified: 2021-05-05","title":"Decision-making (Onchain/offchain)"},{"location":"framework/6-collaboration/RFC-0631/#decision-making-onchainoffchain","text":"","title":"Decision-making (Onchain/offchain)"},{"location":"framework/6-collaboration/RFC-0631/#abstract","text":"This section is about processes of decision-making and votes off-chain and on-chain and the communication of the decisions made.","title":"Abstract"},{"location":"framework/6-collaboration/RFC-0631/#motivation","text":"It is of high relevance to define the systems of decision-making and establish processes that do not disadvantage others and are therefore fair and transparent to all members of the consortium and above. For different decisions it might be necessary to use different ways to generate consensus off-chain or on-chain and to define the quorum when a majority is reached, e.g. a qualified majority (when more than half of the votes are sufficient for a decision) or an absolute majority (when a higher majority is required). Rules and regulation for off-chain and on-chain voting, fallback solutions, dispute resolution, announcements of votes and their consequences need to be in place.","title":"Motivation"},{"location":"framework/6-collaboration/RFC-0631/#elaboration","text":"What kind of decisions might require off-chain or on-chain votes:","title":"Elaboration"},{"location":"framework/6-collaboration/RFC-0631/#protocol-related-decisions","text":"Protocol updates Changes of permissions","title":"Protocol related decisions"},{"location":"framework/6-collaboration/RFC-0631/#consortial-decisions","text":"Onboarding or offboarding of members Changes of consortial roles","title":"Consortial decisions"},{"location":"framework/6-collaboration/RFC-0631/#off-chain-voting","text":"The decision-making process off-chain needs to be described.","title":"Off-chain voting"},{"location":"framework/6-collaboration/RFC-0631/#on-chain-voting","text":"The decision-making process on-chain needs to be described.","title":"On-chain voting"},{"location":"framework/6-collaboration/RFC-0631/#weightings","text":"It can be decided that votes are weighted.","title":"Weightings"},{"location":"framework/6-collaboration/RFC-0631/#fallback-solution-and-dispute-resolution","text":"What happens if the vote is not cast, and how long does this process actually take?","title":"Fallback solution and dispute resolution"},{"location":"framework/6-collaboration/RFC-0631/#announcements","text":"","title":"Announcements"},{"location":"framework/6-collaboration/RFC-0631/#dates-and-deadlines","text":"Information about an upcoming vote must also be communicated in time and the decision-making process needs to be carried out due to all formal process of timely announcements, commenting phases etc. Only if all formalities have been clarified, the decision process can be carried out.","title":"Dates and deadlines"},{"location":"framework/6-collaboration/RFC-0631/#results","text":"The announcement of the decision taken needs to be communicated to all members and above in a timely manner.","title":"Results"},{"location":"framework/6-collaboration/RFC-0631/#consequences","text":"Furthermore, consequences of decisions and votes need to be respected. These decisions are usually executed by the third parties. In some cases, legal documents or contracts of the consortium need to be adapted.","title":"Consequences"},{"location":"framework/6-collaboration/RFC-0631/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/6-collaboration/RFC-0631/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/6-collaboration/RFC-0631/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0631 Contributing authors: Sebastian Posth , David Maas Status of this document: work in progress Last day modified: 2021-05-05","title":"Bibliography of selected references"},{"location":"framework/7-economics/Economics/","text":"Economics Introduction Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/7-economics/Economics/#economics-introduction","text":"","title":"Economics Introduction"},{"location":"framework/7-economics/Economics/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/7-economics/Economics/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/7-economics/Economics/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/7-economics/Economics/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/7-economics/Economics/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/7-economics/Economics/#bibliography-of-selected-references","text":"List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/7-economics/RFC-0711/","text":"RFC-0711 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Incentives"},{"location":"framework/7-economics/RFC-0711/#rfc-0711-title","text":"","title":"RFC-0711 \u2013 Title"},{"location":"framework/7-economics/RFC-0711/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/7-economics/RFC-0711/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/7-economics/RFC-0711/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/7-economics/RFC-0711/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/7-economics/RFC-0711/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/7-economics/RFC-0711/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/7-economics/RFC-0721/","text":"RFC-0721 \u2013 Title Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Fees"},{"location":"framework/7-economics/RFC-0721/#rfc-0721-title","text":"","title":"RFC-0721 \u2013 Title"},{"location":"framework/7-economics/RFC-0721/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/7-economics/RFC-0721/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/7-economics/RFC-0721/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/7-economics/RFC-0721/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/7-economics/RFC-0721/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/7-economics/RFC-0721/#bibliography-of-selected-references","text":"( List of references and literature ) Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/8-maintenance/Maintenance/","text":"Maintenance Abstract This section covers general topics of IT maintenance. Although these topics will have a high overlap with general IT ops and devops practices, RFCs in this section should target blockchain specifics. Motivation A blockchain network is an IT system and therebey bound to the general laws of physics and the nature of hardware and software, since it is not operated in an idealized or theorized vacuum. Although the current IT industry possesses an extensive body of knowledge with regards to topics of IT maintenance, especially in the wake of the devops movement and the rise of the cloud infrastructure and infrastrucutre-as-code paradigms, those learnings are not always transfered into world of blockchain operations, rendering the operational aspects sometimes seemingly amateurish. While the authors aren't aware of the reasons for this disparity in ops culture, they might arise from technical nature of public-permissionless networks. A public-permissionless network needs to be, by definition, resilient to node failures and network glitches introduced by neophyte network participiants. However, in order to achieve the necessary performance for certain business applications and to adhere to potentially defined SLAs, a permissioned network needs to be able to expect and enforce a certain standard of operational excellence from its node operators. Contributing authors: Kevin Wittek Status of this document: work in progress Last day modified: 2021-04-19","title":"Introduction"},{"location":"framework/8-maintenance/Maintenance/#maintenance","text":"","title":"Maintenance"},{"location":"framework/8-maintenance/Maintenance/#abstract","text":"This section covers general topics of IT maintenance. Although these topics will have a high overlap with general IT ops and devops practices, RFCs in this section should target blockchain specifics.","title":"Abstract"},{"location":"framework/8-maintenance/Maintenance/#motivation","text":"A blockchain network is an IT system and therebey bound to the general laws of physics and the nature of hardware and software, since it is not operated in an idealized or theorized vacuum. Although the current IT industry possesses an extensive body of knowledge with regards to topics of IT maintenance, especially in the wake of the devops movement and the rise of the cloud infrastructure and infrastrucutre-as-code paradigms, those learnings are not always transfered into world of blockchain operations, rendering the operational aspects sometimes seemingly amateurish. While the authors aren't aware of the reasons for this disparity in ops culture, they might arise from technical nature of public-permissionless networks. A public-permissionless network needs to be, by definition, resilient to node failures and network glitches introduced by neophyte network participiants. However, in order to achieve the necessary performance for certain business applications and to adhere to potentially defined SLAs, a permissioned network needs to be able to expect and enforce a certain standard of operational excellence from its node operators. Contributing authors: Kevin Wittek Status of this document: work in progress Last day modified: 2021-04-19","title":"Motivation"},{"location":"framework/8-maintenance/RFC-0012/","text":"Application Monitoring Abstract Monitoring of applications (e.g. Dapps) running on or using the network. Motivation Although one might seemingly assume, that it's the application operators task to perform monitoring for their applications, each application will potentially use the network as a shared resource. An application can therefore have all kind of side effects on the overall network stability and performance. For the purpose of this document, we can assume a set of smart contracts (in case the networks supports smart contracts) as an application. Elaboration Parties, that use the network to operate and deploy smart contracts need to disclose which set of smart contracts they have deployed, as well as inform about about their interfaces, in order to allow clear monitoring of an application by the network operators. Implementing smart contracts according to defined interfaces such as e.g., ERC20 or ERC721 allows for further automation of monitoring. In case of deployment without disclosoure, interaction clusters between smart contracts can serve as a heurestic to identify previously unkown applications. It might be advisable to monitor I/O metrics of applications and distinguish between read-heavy and write-heavy applicatons, in order to infer the impact on the network Internal references and dependencies Slicing of context and responsibilities with regards to RFC-0012 is advised. References to best practice, examples There exist commercial SaaS offerings for smart contract monitoring on Ethereum such as Tenderly . In addition, different OSS proof-of-concept implemantions exist. Etherscan allows for semi-automatic monitoring of ERC721 contracts. Bibliography of selected references RFC-0012 Contributing authors: Kevin Wittek , Zoltan Fazekas Status of this document: work in progress Last day modified: 2021-04-19","title":"Application Monitoring"},{"location":"framework/8-maintenance/RFC-0012/#application-monitoring","text":"","title":"Application Monitoring"},{"location":"framework/8-maintenance/RFC-0012/#abstract","text":"Monitoring of applications (e.g. Dapps) running on or using the network.","title":"Abstract"},{"location":"framework/8-maintenance/RFC-0012/#motivation","text":"Although one might seemingly assume, that it's the application operators task to perform monitoring for their applications, each application will potentially use the network as a shared resource. An application can therefore have all kind of side effects on the overall network stability and performance. For the purpose of this document, we can assume a set of smart contracts (in case the networks supports smart contracts) as an application.","title":"Motivation"},{"location":"framework/8-maintenance/RFC-0012/#elaboration","text":"Parties, that use the network to operate and deploy smart contracts need to disclose which set of smart contracts they have deployed, as well as inform about about their interfaces, in order to allow clear monitoring of an application by the network operators. Implementing smart contracts according to defined interfaces such as e.g., ERC20 or ERC721 allows for further automation of monitoring. In case of deployment without disclosoure, interaction clusters between smart contracts can serve as a heurestic to identify previously unkown applications. It might be advisable to monitor I/O metrics of applications and distinguish between read-heavy and write-heavy applicatons, in order to infer the impact on the network","title":"Elaboration"},{"location":"framework/8-maintenance/RFC-0012/#internal-references-and-dependencies","text":"Slicing of context and responsibilities with regards to RFC-0012 is advised.","title":"Internal references and dependencies"},{"location":"framework/8-maintenance/RFC-0012/#references-to-best-practice-examples","text":"There exist commercial SaaS offerings for smart contract monitoring on Ethereum such as Tenderly . In addition, different OSS proof-of-concept implemantions exist. Etherscan allows for semi-automatic monitoring of ERC721 contracts.","title":"References to best practice, examples"},{"location":"framework/8-maintenance/RFC-0012/#bibliography-of-selected-references","text":"RFC-0012 Contributing authors: Kevin Wittek , Zoltan Fazekas Status of this document: work in progress Last day modified: 2021-04-19","title":"Bibliography of selected references"},{"location":"framework/8-maintenance/RFC-0014/","text":"Network Monitoring Abstract Describes the monitoring of the entire network behaviour. Motivation To detect problems and security risks at an early stage, monitoring of the entire blockchain network is necessary. Elaboration Implementing monitoring involves a combination of selecting existing monitoring software and exposing and collecting the necessary metrics. Monitoring can be implemented in a blackbox approach (by looking at public network metrics and indicators) or in a whitebox approach (by explicitly exposing and sampling metrics inside the node processes). The following criteria should be considered when monitoring the overall network behaviour (note that these list is, to a certain degree, generic and not blockchain specific): Metrics (e.g. blocks/s, transactions/s, avg. gasPrice) Sample rate Push vs Pull Form of visualisation Failure detection Anomaly detection Alerting References to best practices, examples There are many existing monitoring tools for blockchain networks. The existing metrics and written logs can be used to draw conclusions about the state and behaviour network. Hyperledger Besu uses the following tools: Use metrics to monitor node performance To enable the Prometheus monitoring and alerting service to access Hyperledger Besu metrics, use the --metrics-enabled option. Use Grafana to visualize the collected data. See the sample Besu Grafana dashboard. Features of Prometeus : Prometheus's main features are: * a multi-dimensional data model with time series data identified by metric name and key/value pairs * PromQL, a flexible query language to leverage this dimensionality * no reliance on distributed storage; single server nodes are autonomous * time series collection happens via a pull model over HTTP * pushing time series is supported via an intermediary gateway * targets are discovered via service discovery or static configuration * multiple modes of graphing and dashboarding support Features of Grafana : Built-in Prometheus Support Query editor with metric name lookup Templating queries for generic dashboards Alias patterns for short readable series names Bibliography of selected references Hyperledger Besu Monitor Metrics RFC-0014 Authors: David Maas , Kevin Wittek Status: work in progress Last modified: 2021-04-19","title":"Network Monitoring"},{"location":"framework/8-maintenance/RFC-0014/#network-monitoring","text":"","title":"Network Monitoring"},{"location":"framework/8-maintenance/RFC-0014/#abstract","text":"Describes the monitoring of the entire network behaviour.","title":"Abstract"},{"location":"framework/8-maintenance/RFC-0014/#motivation","text":"To detect problems and security risks at an early stage, monitoring of the entire blockchain network is necessary.","title":"Motivation"},{"location":"framework/8-maintenance/RFC-0014/#elaboration","text":"Implementing monitoring involves a combination of selecting existing monitoring software and exposing and collecting the necessary metrics. Monitoring can be implemented in a blackbox approach (by looking at public network metrics and indicators) or in a whitebox approach (by explicitly exposing and sampling metrics inside the node processes). The following criteria should be considered when monitoring the overall network behaviour (note that these list is, to a certain degree, generic and not blockchain specific): Metrics (e.g. blocks/s, transactions/s, avg. gasPrice) Sample rate Push vs Pull Form of visualisation Failure detection Anomaly detection Alerting","title":"Elaboration"},{"location":"framework/8-maintenance/RFC-0014/#references-to-best-practices-examples","text":"There are many existing monitoring tools for blockchain networks. The existing metrics and written logs can be used to draw conclusions about the state and behaviour network. Hyperledger Besu uses the following tools: Use metrics to monitor node performance To enable the Prometheus monitoring and alerting service to access Hyperledger Besu metrics, use the --metrics-enabled option. Use Grafana to visualize the collected data. See the sample Besu Grafana dashboard. Features of Prometeus : Prometheus's main features are: * a multi-dimensional data model with time series data identified by metric name and key/value pairs * PromQL, a flexible query language to leverage this dimensionality * no reliance on distributed storage; single server nodes are autonomous * time series collection happens via a pull model over HTTP * pushing time series is supported via an intermediary gateway * targets are discovered via service discovery or static configuration * multiple modes of graphing and dashboarding support Features of Grafana : Built-in Prometheus Support Query editor with metric name lookup Templating queries for generic dashboards Alias patterns for short readable series names","title":"References to best practices, examples"},{"location":"framework/8-maintenance/RFC-0014/#bibliography-of-selected-references","text":"Hyperledger Besu Monitor Metrics RFC-0014 Authors: David Maas , Kevin Wittek Status: work in progress Last modified: 2021-04-19","title":"Bibliography of selected references"},{"location":"framework/9-standards/RFC-0910/","text":"Best Practice Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature RFC-0910 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Best Practice"},{"location":"framework/9-standards/RFC-0910/#best-practice","text":"","title":"Best Practice"},{"location":"framework/9-standards/RFC-0910/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/9-standards/RFC-0910/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/9-standards/RFC-0910/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/9-standards/RFC-0910/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/9-standards/RFC-0910/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/9-standards/RFC-0910/#bibliography-of-selected-references","text":"List of references and literature RFC-0910 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/9-standards/RFC-0920/","text":"Identifiers Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies ( Lists of internal references and dependencies ) References to best practice, examples ( List of references to best practice, examples ) Bibliography of selected references ( List of references and literature ) RFC-0920 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Identifiers"},{"location":"framework/9-standards/RFC-0920/#identifiers","text":"","title":"Identifiers"},{"location":"framework/9-standards/RFC-0920/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/9-standards/RFC-0920/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/9-standards/RFC-0920/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/9-standards/RFC-0920/#internal-references-and-dependencies","text":"( Lists of internal references and dependencies )","title":"Internal references and dependencies"},{"location":"framework/9-standards/RFC-0920/#references-to-best-practice-examples","text":"( List of references to best practice, examples )","title":"References to best practice, examples"},{"location":"framework/9-standards/RFC-0920/#bibliography-of-selected-references","text":"( List of references and literature ) RFC-0920 Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"},{"location":"framework/9-standards/Standards/","text":"Standards Abstract ( 1-2 sentences ) Motivation ( max. +- 2.000 characters, former \u201cmotivation\u201d section ) Elaboration ( max. +- 5.000 characters ) Internal references and dependencies Lists of internal references and dependencies References to best practice, examples List of references to best practice, examples Bibliography of selected references List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Introduction"},{"location":"framework/9-standards/Standards/#standards","text":"","title":"Standards"},{"location":"framework/9-standards/Standards/#abstract","text":"( 1-2 sentences )","title":"Abstract"},{"location":"framework/9-standards/Standards/#motivation","text":"( max. +- 2.000 characters, former \u201cmotivation\u201d section )","title":"Motivation"},{"location":"framework/9-standards/Standards/#elaboration","text":"( max. +- 5.000 characters )","title":"Elaboration"},{"location":"framework/9-standards/Standards/#internal-references-and-dependencies","text":"Lists of internal references and dependencies","title":"Internal references and dependencies"},{"location":"framework/9-standards/Standards/#references-to-best-practice-examples","text":"List of references to best practice, examples","title":"References to best practice, examples"},{"location":"framework/9-standards/Standards/#bibliography-of-selected-references","text":"List of references and literature Contributing authors: Status of this document: work in progress Last day modified: 2021-04-13","title":"Bibliography of selected references"}]}